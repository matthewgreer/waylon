{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/enemy.js","webpack:///./src/scripts/orca.js","webpack:///./src/scripts/thar_she_blows.js","webpack:///./src/scripts/waves.js","webpack:///./src/scripts/waylon.js","webpack:///./src/scripts/whiteshark.js","webpack:///./src/scripts/game.js","webpack:///./src/scripts/freq_analyzer.js","webpack:///./src/scripts/modal.js","webpack:///./src/scripts/game_view.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Enemy","options","velocityScale","offsetX","velocity","position","hitBox","tailX","game","remove","this","hSize","vSize","sizeScale","frontX","midX","rearX","dorsalY","midY","ventralY","Orca","calculateHitBox","waylon","midFrX","midRrX","ctx","x","y","scale","beginPath","moveTo","bezierCurveTo","closePath","fillStyle","fill","lineWidth","strokeStyle","stroke","lineTo","TharSheBlows","save","clip","transform","arc","Math","PI","rainbowStartX","rainbowEndX","rainbowEndY","rainbowRadius","rainbowGradient","createRadialGradient","addColorStop","restore","rainbowOpacity","Waves","skyCrestToTroughGradient","createLinearGradient","oceanCrestToTroughGradient","rect","ceil","Waylon","newPitch","freqAnalyzer","outputTopFreq","offsetY","currentPitch","tharSheBlows","length","add","scaledLineWidth","lineW","floor","WhiteShark","quadraticCurveTo","ENEMY_TYPES","Game","skyGradient","oceanGradient","dimensions","clearRect","fillRect","allObjects","forEach","draw","push","enemies","waves","Error","splice","indexOf","tick","setInterval","paused","chooseRandomEnemy","chosenEnemyIdx","random","spawnEnemy","enemyType","enemy","randomScale","randomVelocity","randomDepth","objectHeight","round","concat","move","delta","moveObjects","bubbles","difficulty","FreqAnalyzer","undefined","navigator","mediaDevices","getUserMedia","constraints","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Promise","resolve","reject","audioCtxt","window","AudioContext","webkitAudioContext","analyzer","createAnalyser","fftSize","minDecibels","smoothingTimeConstant","audioArray","Uint8Array","frequencyBinCount","console","log","audio","video","then","stream","source","createMediaStreamSource","connect","catch","err","arr","maxVal","maxIdx","state","getByteFrequencyData","indexOfGreatestFrequency","mediaStream","active","getTracks","track","stop","removeTrack","close","display","document","getElementById","Modal","modal","style","innerHTML","show","predator","GameView","clear","startButton","addEventListener","start","removeEventListener","getMediaDevices","createAudioContext","createAnalyzerNode","getMicStream","spawnTimer","pauseButton","pause","stopButton","lastTime","animReq","requestAnimationFrame","animate","time","timeDelta","step","checkPredation","endOfGame","endGame","killer","isEating","gameOver","reset","intro","resetFreqAnalyzer","gameStop","cancelAnimationFrame","clearInterval","suspend","resumeButton","resume","canvas","width","height","getContext","initialize"],"mappings":"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EACVD,EAAI,GAAKC,GAEXH,EAAIM,cACFL,EAAI,IAAME,EACVD,EAAI,GAAKC,EACTF,EAAI,IAAME,EACVD,EAAI,GAAKC,EACTF,EAAI,IAAME,EACVD,EAAI,GAAKC,GAEXH,EAAIM,cACFL,EAAI,IAAME,EACVD,EAAI,GAAKC,EACTF,EAAI,IAAME,EACVD,EAAI,GAAKC,EACTF,EAAI,IAAME,EACVD,EAAI,GAAKC,GAEXH,EAAIM,cACFL,EAAI,IAAME,EACVD,EAAI,GAAKC,EACTF,EAAI,IAAME,EACVD,EAAI,GAAKC,EACTF,EAAI,IAAME,EACVD,EAAI,GAAKC,GAEXH,EAAIM,cACFL,EAAI,IAAME,EACVD,EAAI,GAAKC,EACTF,EAAI,IAAME,EACVD,EAAI,GAAKC,EACTF,EAAI,IAAME,EACVD,EAAI,GAAKC,GAEXH,EAAIM,cACFL,EAAI,IAAME,EACVD,EAAI,GAAKC,EACTF,EAAI,IAAME,EACVD,EAAI,GAAKC,EACTF,EAAI,IAAME,EACVD,EAAI,GAAKC,GAEXH,EAAIM,cACFL,EAAI,IAAME,EACVD,EAAI,GAAKC,EACTF,EAAI,IAAME,EACVD,EAAI,GAAKC,EACTF,EAAI,IAAME,EACVD,EAAI,GAAKC,GAEXH,EAAIM,cACFL,EAAI,IAAME,EACVD,EAAI,GAAKC,EACTF,EAAI,IAAME,EACVD,EAAI,GAAKC,EACTF,EAAI,IAAME,EACVD,EAAI,GAAKC,GAEXH,EAAIM,cACFL,EAAI,IAAME,EACVD,EAAI,GAAKC,EACTF,EAAI,IAAME,EACVD,EAAI,GAAKC,EACTF,EAAI,IAAME,EACVD,EAAI,GAAKC,GAEXH,EAAIM,cACFL,EAAI,IAAME,EACVD,EAAI,GAAKC,EACTF,EAAI,IAAME,EACVD,EAAI,GAAKC,EACTF,EAAI,IAAME,EACVD,EAAI,GAAKC,GAEXH,EAAIM,cACFL,EAAI,IAAME,EACVD,EAAI,GAAKC,EACTF,EAAI,IAAME,EACVD,EAAI,GAAKC,EACTF,EAAI,IAAME,EACVD,EAAI,GAAKC,GAEXH,EAAIM,cACFL,EAAI,IAAME,EACVD,EAAI,IAA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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","// import Util from \"./util\";\n\nclass Enemy {\n  constructor(options) {\n    this.position = options.position;\n    this.velocity = options.velocity;\n    this.hSize;\n    this.vSize;\n    this.sizeScale = options.sizeScale;\n    this.hitBox = {\n      frontX: 0,\n      midX: 0,\n      rearX: 0,\n      dorsalY: 0,\n      midY: 0,\n      ventralY: 0,\n      tailX: this.position[0] + this.sizeScale * this.hSize\n    };\n    this.game = options.game;\n  }\n\n  move = (velocityScale) => {\n    // currently, enemies move along a constant depth (y-value)\n    // future updates will provide more complex enemy movement\n    let offsetX = this.velocity * velocityScale;\n    this.position = [this.position[0] - offsetX, this.position[1]];\n    debugger\n    if (this.hitBox.tailX < 0) {\n      return this.game.remove(this);\n    }\n  };\n\n  // This is a collision calculator based on the entire rectangular perimeter of\n  //   the enemies and Waylon. It allows a generic function to serve for all\n  //   enemy types, but results in some very unrealistic collisions. I have now\n  //   attempted to create more complex collision logic. If that fails, revert\n  //   to this method.\n\n  // isEating = () => {\n  //   if (\n  //     this.box[0] <= this.game.waylon[0].box[1] && // the nose of this enemy is at or beyond the nose of Waylon\n  //     this.box[1] > this.game.waylon[0].box[0]   // AND the tail of this enemy is not past Waylon's tail\n  //   ) {  // then check if...\n  //     debugger\n  //     return (\n  //       this.box[3] >= this.game.waylon[0].box[2] && // the ventral side of the enemy is deeper than Waylon's dorsal side\n  //       this.box[2] < this.game.waylon[0].box[3] // AND the dorsal side of the enemy is no deeper than Waylon's ventral side\n  //       // and return TRUE if so, FALSE if not\n  //     );\n  //   } else {\n  //     debugger\n  //     return false; // but if the first condition wasn't met, return FALSE\n  //   }\n  // };\n};\n\nexport default Enemy;","// import colors from \"../styles/_colors.scss\";\nimport Enemy from \"./enemy\";\n\nclass Orca extends Enemy {\n  constructor(options) {\n    super(options);\n    this.hSize = 932;\n    this.vSize = 463;\n    this.name = \"Orca\";\n  }\n\n  calculateHitBox = () => {\n    // Orca model is x:932, y: 463 at 1:1 scale\n    this.hitBox.frontX = this.position[0];\n    this.hitBox.midX = this.position[0] + this.sizeScale * 220;\n    this.hitBox.rearX = this.position[0] + this.sizeScale * 500;\n    this.hitBox.dorsalY = this.position[1] + this.sizeScale * 155;\n    this.hitBox.midY = this.position[1] + this.sizeScale * 305;\n    this.hitBox.ventralY = this.position[1] + this.sizeScale * 365;\n  };\n\n  isEating = () => {\n    this.calculateHitBox();\n    // COLLISION CHECKER\n    let waylon = this.game.waylon[0];\n    // first check if\n    if (\n      // this Orca's front IS level with or beyond Waylon's front\n      this.hitBox.frontX <= waylon.hitBox.frontX &&\n      // WHILST the rear of this Orca's hitbox is NOT yet beyond Waylon's rear\n      this.hitBox.rearX >= waylon.hitBox.rearX\n      // and IF NOT, skip the other checks and return FALSE. (line 110)\n    ) {\n      // but IF SO, then check if\n      if (\n        // this Orca's front is NOT yet beyond Waylon's chest \n        this.hitBox.frontX > waylon.hitBox.midFrX\n      ) {\n        // and if so, check if\n        if (\n          // this Orca's chest IS level with or beyond Waylon's front\n          this.hitBox.midX <= waylon.hitBox.frontX\n        ) {\n          // in which case, return TRUE if this Orca's *full body* overlaps \n          //   Waylon's head anywhere along the y-axis\n          return this.hitBox.dorsalY <= waylon.hitBox.midY &&\n          this.hitBox.ventralY >= waylon.hitBox.dorsalY\n          // and return FALSE if not\n        }\n        // but if this Orca's chest is NOT yet beyond Waylon's front\n        else {\n        // then return TRUE if this Orca's *head* overlaps Waylon's head\n        //   anywhere along the y-axis\n          return this. hitBox.dorsalY <= waylon.hitBox.midY &&\n          this.hitBox.midY >= waylon.hitBox.dorsalY\n          // and return FALSE if not  \n        }\n      }\n      // but if this Orca's front IS level with or beyond Waylon's chest\n      //   then check if\n      else if (\n        // this Orca's front is NOT yet beyond Waylon's dorsal fin\n        this.hitBox.frontX >= waylon.hitBox.midRrX ||\n        // OR if this Orca's chest IS beyond Waylon's front\n        (this.hitBox.midX <= waylon.hitBox.frontX &&\n        // WHILST this Orca's rear is NOT yet beyond Waylon's dorsal fin\n        this.hitBox.rearX >= waylon.hitBox.midRrX)\n      ) {\n        // and if so, check if\n        if (\n          // this Orca's chest is level with or beyond Waylon's chest\n          this.hitBox.midX <= waylon.hitBox.midFrX\n          ) {\n            // and if so, return TRUE if this Orca's *full body* overlaps\n            //   Waylon's full body anywhere along the y-axis\n            return this.hitBox.dorsalY < waylon.hitBox.ventralY &&\n            this.hitBox.ventralY > waylon.hitBox.dorsalY\n            // and return FALSE if not.\n          }\n        // and if this Orca's chest is NOT beyond Waylon's chest\n        else {\n        // then return TRUE if this Orca's *head* overlaps Waylon's full body\n        //   anywhere along the y-axis\n          return this.hitBox.dorsalY < waylon.hitBox.ventralY &&\n          this.hitBox.midY > waylon.hitBox.dorsalY\n        // and return FALSE if not.\n        }\n      }\n      // and if this Orca's front IS beyond Waylon's dorsal fin\n      //   then check if\n      else if (\n        // this Orca's rear IS beyond Waylon's dorsal fin\n        this.hitBox.rearX >= waylon.hitBox.midRrX\n      ) {\n        // and if so, return TRUE if this Orca's *full body* overlaps Waylon's\n        //   tail anywhere along the y-axis\n        return this.hitBox.dorsalY <= waylon.ventralY &&\n        this.hitBox.ventralY >= waylon.hitBox.midY\n        // and return FALSE if not.\n      } \n      // and if this Orca's rear is NOT yet beyond Waylon's dorsal fin\n      else {\n      //   then return TRUE if this Orca's *full body* overlaps Waylon's\n      //   full body anywhere along the y-axis\n        return this.hitBox.dorsalY <= waylon.ventralY &&\n        this.hitBox.ventralY >= waylon.hitBox.dorsalY\n      // and return FALSE if not\n      }\n    } \n    else {\n      return false // but if the first condition wasn't met, return FALSE\n    }\n  };\n\n  draw = (ctx) => {\n    const x = this.position[0];\n    const y = this.position[1];\n    const scale = this.sizeScale;\n\n    // Orca Right Pectoral Fin (gray)\n    ctx.beginPath();\n    ctx.moveTo(x + 239 * scale, y + 347 * scale);\n    ctx.bezierCurveTo(\n      x + 239 * scale,\n      y + 347 * scale,\n      x + 270 * scale,\n      y + 349 * scale,\n      x + 288 * scale,\n      y + 357 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 300 * scale,\n      y + 369 * scale,\n      x + 307 * scale,\n      y + 412 * scale,\n      x + 292 * scale,\n      y + 412 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 283 * scale,\n      y + 415 * scale,\n      x + 261 * scale,\n      y + 401 * scale,\n      x + 254 * scale,\n      y + 399 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 251 * scale,\n      y + 377 * scale,\n      x + 239 * scale,\n      y + 347 * scale,\n      x + 239 * scale,\n      y + 347 * scale\n    );\n    ctx.closePath();\n    //    ctx.fillStyle = colors.medGray;\n    ctx.fillStyle = \"rgba(128, 128, 128, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 2;\n    //    ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Orca Inner Jaw\n    ctx.beginPath();\n    ctx.moveTo(x + 88 * scale, y + 218 * scale);\n    ctx.bezierCurveTo(\n      x + 88 * scale,\n      y + 218 * scale,\n      x + 84 * scale,\n      y + 246 * scale,\n      x + 76 * scale,\n      y + 250 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 68 * scale,\n      y + 253 * scale,\n      x + 63 * scale,\n      y + 266 * scale,\n      x + 9 * scale,\n      y + 284 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 7 * scale,\n      y + 284 * scale,\n      x + 38 * scale,\n      y + 264 * scale,\n      x + 63 * scale,\n      y + 254 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 89 * scale,\n      y + 244 * scale,\n      x + 100 * scale,\n      y + 235 * scale,\n      x + 100 * scale,\n      y + 235 * scale\n    );\n    //    ctx.fillStyle = colors.orcaMouthPink;\n    ctx.fillStyle = \"rgba(251, 223, 223, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 2;\n    //    ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Orca Teeth Right Side\n\n    // Orca Right Tooth #1\n    ctx.beginPath();\n    ctx.moveTo(x + 31 * scale, y + 270 * scale);\n    ctx.bezierCurveTo(\n      x + 31 * scale,\n      y + 273 * scale,\n      x + 35 * scale,\n      y + 271 * scale,\n      x + 35 * scale,\n      y + 270 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 36 * scale,\n      y + 269 * scale,\n      x + 34 * scale,\n      y + 266 * scale,\n      x + 33 * scale,\n      y + 264 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 33 * scale,\n      y + 263 * scale,\n      x + 31 * scale,\n      y + 269 * scale,\n      x + 31 * scale,\n      y + 270 * scale\n    );\n    ctx.closePath();\n    //    ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 255, 1.0)\";\n    ctx.fill();\n    //    ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Orca Right Tooth #2\n    ctx.beginPath();\n    ctx.moveTo(x + 36 * scale, y + 268 * scale);\n    ctx.bezierCurveTo(\n      x + 36 * scale,\n      y + 270 * scale,\n      x + 39 * scale,\n      y + 269 * scale,\n      x + 40 * scale,\n      y + 267 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 40 * scale,\n      y + 267 * scale,\n      x + 39 * scale,\n      y + 264 * scale,\n      x + 38 * scale,\n      y + 262 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 38 * scale,\n      y + 261 * scale,\n      x + 36 * scale,\n      y + 267 * scale,\n      x + 36 * scale,\n      y + 268 * scale\n    );\n    ctx.closePath();\n    //    ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 255, 1.0)\";\n    ctx.fill();\n    //    ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Orca Right Tooth #3\n    ctx.beginPath();\n    ctx.moveTo(x + 40 * scale, y + 266 * scale);\n    ctx.bezierCurveTo(\n      x + 41 * scale,\n      y + 268 * scale,\n      x + 44 * scale,\n      y + 266 * scale,\n      x + 44 * scale,\n      y + 264 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 45 * scale,\n      y + 263 * scale,\n      x + 43 * scale,\n      y + 261 * scale,\n      x + 42 * scale,\n      y + 259 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 41 * scale,\n      y + 258 * scale,\n      x + 40 * scale,\n      y + 264 * scale,\n      x + 40 * scale,\n      y + 266 * scale\n    );\n    ctx.closePath();\n    //    ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 255, 1.0)\";\n    ctx.fill();\n    //    ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Orca Right Tooth #4\n    ctx.beginPath();\n    ctx.moveTo(x + 45 * scale, y + 263 * scale);\n    ctx.bezierCurveTo(\n      x + 45 * scale,\n      y + 265 * scale,\n      x + 49 * scale,\n      y + 264 * scale,\n      x + 49 * scale,\n      y + 262 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 50 * scale,\n      y + 261 * scale,\n      x + 48 * scale,\n      y + 259 * scale,\n      x + 47 * scale,\n      y + 257 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 47 * scale,\n      y + 256 * scale,\n      x + 45 * scale,\n      y + 261 * scale,\n      x + 45 * scale,\n      y + 263 * scale\n    );\n    ctx.closePath();\n    //    ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 255, 1.0)\";\n    ctx.fill();\n    //    ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Orca Right Tooth #5\n    ctx.beginPath();\n    ctx.moveTo(x + 50 * scale, y + 260 * scale);\n    ctx.bezierCurveTo(\n      x + 50 * scale,\n      y + 262 * scale,\n      x + 53 * scale,\n      y + 260 * scale,\n      x + 54 * scale,\n      y + 259 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 54 * scale,\n      y + 258 * scale,\n      x + 52 * scale,\n      y + 256 * scale,\n      x + 52 * scale,\n      y + 253 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 51 * scale,\n      y + 252 * scale,\n      x + 49 * scale,\n      y + 258 * scale,\n      x + 50 * scale,\n      y + 260 * scale\n    );\n    ctx.closePath();\n    //    ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 255, 1.0)\";\n    ctx.fill();\n    //    ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Orca Right Tooth #6\n    ctx.beginPath();\n    ctx.moveTo(x + 55 * scale, y + 258 * scale);\n    ctx.bezierCurveTo(\n      x + 55 * scale,\n      y + 260 * scale,\n      x + 58 * scale,\n      y + 258 * scale,\n      x + 59 * scale,\n      y + 257 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 59 * scale,\n      y + 256 * scale,\n      x + 58 * scale,\n      y + 254 * scale,\n      x + 57 * scale,\n      y + 251 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 57 * scale,\n      y + 250 * scale,\n      x + 55 * scale,\n      y + 256 * scale,\n      x + 55 * scale,\n      y + 258 * scale\n    );\n    ctx.closePath();\n    //    ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 255, 1.0)\";\n    ctx.fill();\n    //    ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Orca Right Tooth #7\n    ctx.beginPath();\n    ctx.moveTo(x + 63 * scale, y + 256 * scale);\n    ctx.bezierCurveTo(\n      x + 63 * scale,\n      y + 258 * scale,\n      x + 66 * scale,\n      y + 256 * scale,\n      x + 67 * scale,\n      y + 255 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 67 * scale,\n      y + 254 * scale,\n      x + 65 * scale,\n      y + 252 * scale,\n      x + 65 * scale,\n      y + 249 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 64 * scale,\n      y + 248 * scale,\n      x + 62 * scale,\n      y + 254 * scale,\n      x + 63 * scale,\n      y + 256 * scale\n    );\n    ctx.closePath();\n    //    ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 255, 1.0)\";\n    ctx.fill();\n    //    ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Orca Right Tooth #8\n    ctx.beginPath();\n    ctx.moveTo(x + 72 * scale, y + 254 * scale);\n    ctx.bezierCurveTo(\n      x + 72 * scale,\n      y + 256 * scale,\n      x + 75 * scale,\n      y + 254 * scale,\n      x + 76 * scale,\n      y + 253 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 76 * scale,\n      y + 252 * scale,\n      x + 74 * scale,\n      y + 249 * scale,\n      x + 74 * scale,\n      y + 247 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 73 * scale,\n      y + 246 * scale,\n      x + 71 * scale,\n      y + 252 * scale,\n      x + 72 * scale,\n      y + 254 * scale\n    );\n    ctx.closePath();\n    //    ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 255, 1.0)\";\n    ctx.fill();\n    //    ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Orca Teeth Left Side\n\n    // Orca Left Tooth #1\n\n    ctx.beginPath();\n    ctx.moveTo(x + 20 * scale, y + 280 * scale);\n    ctx.bezierCurveTo(\n      x + 20 * scale,\n      y + 283 * scale,\n      x + 25 * scale,\n      y + 280 * scale,\n      x + 26 * scale,\n      y + 278 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 27 * scale,\n      y + 277 * scale,\n      x + 24 * scale,\n      y + 273 * scale,\n      x + 23 * scale,\n      y + 269 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 22 * scale,\n      y + 268 * scale,\n      x + 19 * scale,\n      y + 277 * scale,\n      x + 20 * scale,\n      y + 280 * scale\n    );\n    ctx.closePath();\n    //    ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 255, 1.0)\";\n    ctx.fill();\n    //    ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Orca Left Tooth #2\n    ctx.beginPath();\n    ctx.moveTo(x + 27 * scale, y + 276 * scale);\n    ctx.bezierCurveTo(\n      x + 28 * scale,\n      y + 279 * scale,\n      x + 33 * scale,\n      y + 276 * scale,\n      x + 34 * scale,\n      y + 274 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 35 * scale,\n      y + 273 * scale,\n      x + 32 * scale,\n      y + 269 * scale,\n      x + 31 * scale,\n      y + 265 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 30 * scale,\n      y + 264 * scale,\n      x + 27 * scale,\n      y + 273 * scale,\n      x + 27 * scale,\n      y + 276 * scale\n    );\n    ctx.closePath();\n    //    ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 255, 1.0)\";\n    ctx.fill();\n    //    ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Orca Left Tooth #3\n    ctx.beginPath();\n    ctx.moveTo(x + 35 * scale, y + 274 * scale);\n    ctx.bezierCurveTo(\n      x + 36 * scale,\n      y + 277 * scale,\n      x + 41 * scale,\n      y + 275 * scale,\n      x + 42 * scale,\n      y + 273 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 43 * scale,\n      y + 271 * scale,\n      x + 40 * scale,\n      y + 267 * scale,\n      x + 39 * scale,\n      y + 263 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 38 * scale,\n      y + 262 * scale,\n      x + 35 * scale,\n      y + 271 * scale,\n      x + 35 * scale,\n      y + 274 * scale\n    );\n    ctx.closePath();\n    //    ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 255, 1.0)\";\n    ctx.fill();\n    //    ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Orca Left Tooth #4\n    ctx.beginPath();\n    ctx.moveTo(x + 42 * scale, y + 269 * scale);\n    ctx.bezierCurveTo(\n      x + 43 * scale,\n      y + 273 * scale,\n      x + 48 * scale,\n      y + 270 * scale,\n      x + 49 * scale,\n      y + 268 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 50 * scale,\n      y + 267 * scale,\n      x + 47 * scale,\n      y + 263 * scale,\n      x + 46 * scale,\n      y + 259 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 45 * scale,\n      y + 257 * scale,\n      x + 42 * scale,\n      y + 267 * scale,\n      x + 42 * scale,\n      y + 269 * scale\n    );\n    ctx.closePath();\n    //    ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 255, 1.0)\";\n    ctx.fill();\n    //    ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Orca Left Tooth #5\n    ctx.beginPath();\n    ctx.moveTo(x + 51 * scale, y + 267 * scale);\n    ctx.bezierCurveTo(\n      x + 52 * scale,\n      y + 270 * scale,\n      x + 57 * scale,\n      y + 267 * scale,\n      x + 58 * scale,\n      y + 265 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 58 * scale,\n      y + 263 * scale,\n      x + 55 * scale,\n      y + 260 * scale,\n      x + 53 * scale,\n      y + 256 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 53 * scale,\n      y + 254 * scale,\n      x + 50 * scale,\n      y + 264 * scale,\n      x + 51 * scale,\n      y + 267 * scale\n    );\n    ctx.closePath();\n    //    ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 255, 1.0)\";\n    ctx.fill();\n    //    ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Orca Left Tooth #6\n    ctx.beginPath();\n    ctx.moveTo(x + 58 * scale, y + 262 * scale);\n    ctx.bezierCurveTo(\n      x + 59 * scale,\n      y + 265 * scale,\n      x + 64 * scale,\n      y + 263 * scale,\n      x + 65 * scale,\n      y + 261 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 66 * scale,\n      y + 259 * scale,\n      x + 63 * scale,\n      y + 255 * scale,\n      x + 61 * scale,\n      y + 251 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 61 * scale,\n      y + 250 * scale,\n      x + 58 * scale,\n      y + 259 * scale,\n      x + 58 * scale,\n      y + 262 * scale\n    );\n    ctx.closePath();\n    //    ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 255, 1.0)\";\n    ctx.fill();\n    //    ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Orca Left Tooth #7\n    ctx.beginPath();\n    ctx.moveTo(x + 66 * scale, y + 260 * scale);\n    ctx.bezierCurveTo(\n      x + 66 * scale,\n      y + 263 * scale,\n      x + 71 * scale,\n      y + 261 * scale,\n      x + 73 * scale,\n      y + 258 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 73 * scale,\n      y + 257 * scale,\n      x + 70 * scale,\n      y + 253 * scale,\n      x + 69 * scale,\n      y + 249 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 69 * scale,\n      y + 248 * scale,\n      x + 65 * scale,\n      y + 257 * scale,\n      x + 66 * scale,\n      y + 260 * scale\n    );\n    ctx.closePath();\n    //    ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 255, 1.0)\";\n    ctx.fill();\n    //    ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Orca Eye - Sclera\n    ctx.beginPath();\n    ctx.moveTo(x + 99 * scale, y + 227 * scale);\n    ctx.bezierCurveTo(\n      x + 95 * scale,\n      y + 228 * scale,\n      x + 91 * scale,\n      y + 223 * scale,\n      x + 90 * scale,\n      y + 220 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 90 * scale,\n      y + 217 * scale,\n      x + 113 * scale,\n      y + 213 * scale,\n      x + 111 * scale,\n      y + 216 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 107 * scale,\n      y + 225 * scale,\n      x + 104 * scale,\n      y + 226 * scale,\n      x + 99 * scale,\n      y + 227 * scale\n    );\n    ctx.closePath();\n    //    ctx.fillStyle = colors.orcaEyeWhite;\n    ctx.fillStyle = \"rgba(255, 255, 221, 1.0)\";\n    ctx.fill();\n\n    // Orca Eye - Iris\n    ctx.beginPath();\n    ctx.moveTo(x + 108 * scale, y + 221 * scale);\n    ctx.bezierCurveTo(\n      x + 108 * scale,\n      y + 226 * scale,\n      x + 104 * scale,\n      y + 229 * scale,\n      x + 99 * scale,\n      y + 229 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 94 * scale,\n      y + 229 * scale,\n      x + 90 * scale,\n      y + 226 * scale,\n      x + 90 * scale,\n      y + 221 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 90 * scale,\n      y + 216 * scale,\n      x + 94 * scale,\n      y + 212 * scale,\n      x + 99 * scale,\n      y + 212 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 104 * scale,\n      y + 212 * scale,\n      x + 108 * scale,\n      y + 216 * scale,\n      x + 108 * scale,\n      y + 221 * scale\n    );\n    ctx.closePath();\n    //    ctx.fillStyle = colors.orcaEyeDkGray;\n    ctx.fillStyle = \"rgba(57, 57, 57, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 1;\n    //    ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Orca Eye - Pupil\n    ctx.beginPath();\n    ctx.moveTo(x + 102 * scale, y + 221 * scale);\n    ctx.bezierCurveTo(\n      x + 102 * scale,\n      y + 224 * scale,\n      x + 100 * scale,\n      y + 226 * scale,\n      x + 97 * scale,\n      y + 226 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 94 * scale,\n      y + 226 * scale,\n      x + 91 * scale,\n      y + 224 * scale,\n      x + 91 * scale,\n      y + 221 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 91 * scale,\n      y + 217 * scale,\n      x + 94 * scale,\n      y + 215 * scale,\n      x + 97 * scale,\n      y + 215 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 100 * scale,\n      y + 215 * scale,\n      x + 102 * scale,\n      y + 217 * scale,\n      x + 102 * scale,\n      y + 221 * scale\n    );\n    ctx.closePath();\n    //    ctx.fillStyle = colors.waylonBlack;\n    ctx.fillStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 1;\n    //    ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Orca Eye - Shine\n    ctx.beginPath();\n    ctx.moveTo(x + 96 * scale, y + 226 * scale);\n    ctx.bezierCurveTo(\n      x + 96 * scale,\n      y + 226 * scale,\n      x + 96 * scale,\n      y + 226 * scale,\n      x + 95 * scale,\n      y + 226 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 95 * scale,\n      y + 226 * scale,\n      x + 94 * scale,\n      y + 226 * scale,\n      x + 94 * scale,\n      y + 226 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 94 * scale,\n      y + 225 * scale,\n      x + 95 * scale,\n      y + 225 * scale,\n      x + 95 * scale,\n      y + 225 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 96 * scale,\n      y + 225 * scale,\n      x + 96 * scale,\n      y + 226 * scale,\n      x + 96 * scale,\n      y + 226 * scale\n    );\n    ctx.closePath();\n    //    ctx.fillStyle = colors.eyeShine;\n    ctx.fillStyle = \"rgba(255, 255, 255, 0.7)\";\n    ctx.fill();\n    ctx.beginPath();\n    ctx.moveTo(x + 103 * scale, y + 217 * scale);\n    ctx.bezierCurveTo(\n      x + 103 * scale,\n      y + 217 * scale,\n      x + 102 * scale,\n      y + 218 * scale,\n      x + 101 * scale,\n      y + 217 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 100 * scale,\n      y + 217 * scale,\n      x + 100 * scale,\n      y + 216 * scale,\n      x + 100 * scale,\n      y + 216 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 100 * scale,\n      y + 215 * scale,\n      x + 101 * scale,\n      y + 215 * scale,\n      x + 102 * scale,\n      y + 215 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 103 * scale,\n      y + 216 * scale,\n      x + 103 * scale,\n      y + 216 * scale,\n      x + 103 * scale,\n      y + 217 * scale\n    );\n    ctx.closePath();\n    ctx.fill();\n\n    // Orca - Body (black)\n    ctx.beginPath();\n    ctx.moveTo(x + 927 * scale, y + 267 * scale);\n    ctx.bezierCurveTo(\n      x + 900 * scale,\n      y + 252 * scale,\n      x + 882 * scale,\n      y + 208 * scale,\n      x + 882 * scale,\n      y + 208 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 882 * scale,\n      y + 208 * scale,\n      x + 879 * scale,\n      y + 205 * scale,\n      x + 876 * scale,\n      y + 205 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 873 * scale,\n      y + 205 * scale,\n      x + 881 * scale,\n      y + 205 * scale,\n      x + 882 * scale,\n      y + 202 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 883 * scale,\n      y + 199 * scale,\n      x + 874 * scale,\n      y + 198 * scale,\n      x + 885 * scale,\n      y + 191 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 887 * scale,\n      y + 190 * scale,\n      x + 884 * scale,\n      y + 189 * scale,\n      x + 883 * scale,\n      y + 189 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 870 * scale,\n      y + 184 * scale,\n      x + 829 * scale,\n      y + 187 * scale,\n      x + 829 * scale,\n      y + 187 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 790 * scale,\n      y + 154 * scale,\n      x + 713 * scale,\n      y + 137 * scale,\n      x + 648 * scale,\n      y + 148 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 621 * scale,\n      y + 148 * scale,\n      x + 514 * scale,\n      y + 181 * scale,\n      x + 467 * scale,\n      y + 172 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 444 * scale,\n      y + 151 * scale,\n      x + 440 * scale,\n      y + 98 * scale,\n      x + 431 * scale,\n      y + 51 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 434 * scale,\n      y + 24 * scale,\n      x + 434 * scale,\n      y + 0 * scale,\n      x + 434 * scale,\n      y + 0 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 434 * scale,\n      y + 0 * scale,\n      x + 423 * scale,\n      y - 3 * scale,\n      x + 411 * scale,\n      y + 21 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 390 * scale,\n      y + 59 * scale,\n      x + 369 * scale,\n      y + 172 * scale,\n      x + 348 * scale,\n      y + 175 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 310 * scale,\n      y + 178 * scale,\n      x + 238 * scale,\n      y + 178 * scale,\n      x + 220 * scale,\n      y + 175 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 195 * scale,\n      y + 171 * scale,\n      x + 179 * scale,\n      y + 159 * scale,\n      x + 130 * scale,\n      y + 157 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 112 * scale,\n      y + 156 * scale,\n      x + 67 * scale,\n      y + 154 * scale,\n      x + 47 * scale,\n      y + 166 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 41 * scale,\n      y + 172 * scale,\n      x + 16 * scale,\n      y + 162 * scale,\n      x + 1 * scale,\n      y + 184 * scale\n    );\n    ctx.bezierCurveTo(\n      x - 8 * scale,\n      y + 197 * scale,\n      x + 33 * scale,\n      y + 208 * scale,\n      x + 41 * scale,\n      y + 211 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 108 * scale,\n      y + 232 * scale,\n      x + 72 * scale,\n      y + 196 * scale,\n      x + 156 * scale,\n      y + 320 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 159 * scale,\n      y + 320 * scale,\n      x + 156 * scale,\n      y + 329 * scale,\n      x + 159 * scale,\n      y + 344 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 161 * scale,\n      y + 377 * scale,\n      x + 165 * scale,\n      y + 389 * scale,\n      x + 179 * scale,\n      y + 412 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 200 * scale,\n      y + 448 * scale,\n      x + 221 * scale,\n      y + 463 * scale,\n      x + 233 * scale,\n      y + 463 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 280 * scale,\n      y + 445 * scale,\n      x + 242 * scale,\n      y + 356 * scale,\n      x + 239 * scale,\n      y + 347 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 446 * scale,\n      y + 406 * scale,\n      x + 624 * scale,\n      y + 270 * scale,\n      x + 642 * scale,\n      y + 267 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 654 * scale,\n      y + 261 * scale,\n      x + 698 * scale,\n      y + 237 * scale,\n      x + 731 * scale,\n      y + 225 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 772 * scale,\n      y + 217 * scale,\n      x + 817 * scale,\n      y + 210 * scale,\n      x + 826 * scale,\n      y + 214 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 844 * scale,\n      y + 230 * scale,\n      x + 870 * scale,\n      y + 247 * scale,\n      x + 891 * scale,\n      y + 258 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 921 * scale,\n      y + 275 * scale,\n      x + 942 * scale,\n      y + 273 * scale,\n      x + 927 * scale,\n      y + 267 * scale\n    );\n    ctx.closePath();\n    ctx.moveTo(x + 99 * scale, y + 227 * scale);\n    ctx.bezierCurveTo(\n      x + 95 * scale,\n      y + 228 * scale,\n      x + 91 * scale,\n      y + 223 * scale,\n      x + 90 * scale,\n      y + 220 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 90 * scale,\n      y + 217 * scale,\n      x + 113 * scale,\n      y + 213 * scale,\n      x + 111 * scale,\n      y + 216 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 107 * scale,\n      y + 225 * scale,\n      x + 104 * scale,\n      y + 226 * scale,\n      x + 99 * scale,\n      y + 227 * scale\n    );\n    ctx.closePath();\n    //    ctx.fillStyle = colors.waylonBlack;\n    ctx.fillStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.fill();\n\n    // Orca Belly (white)\n    ctx.beginPath();\n    ctx.moveTo(x + 233 * scale, y + 338 * scale);\n    ctx.lineTo(x + 239 * scale, y + 347 * scale);\n    ctx.bezierCurveTo(\n      x + 239 * scale,\n      y + 347 * scale,\n      x + 393 * scale,\n      y + 389 * scale,\n      x + 516 * scale,\n      y + 329 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 545 * scale,\n      y + 315 * scale,\n      x + 590 * scale,\n      y + 298 * scale,\n      x + 653 * scale,\n      y + 261 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 592 * scale,\n      y + 282 * scale,\n      x + 598 * scale,\n      y + 288 * scale,\n      x + 526 * scale,\n      y + 317 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 513 * scale,\n      y + 317 * scale,\n      x + 526 * scale,\n      y + 303 * scale,\n      x + 568 * scale,\n      y + 282 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 627 * scale,\n      y + 255 * scale,\n      x + 664 * scale,\n      y + 216 * scale,\n      x + 589 * scale,\n      y + 234 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 460 * scale,\n      y + 265 * scale,\n      x + 502 * scale,\n      y + 305 * scale,\n      x + 455 * scale,\n      y + 338 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 362 * scale,\n      y + 387 * scale,\n      x + 215 * scale,\n      y + 323 * scale,\n      x + 233 * scale,\n      y + 338 * scale\n    );\n    ctx.closePath();\n    //    ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 255, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 3;\n    //    ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Orca Chin (white)\n    ctx.beginPath();\n    ctx.moveTo(x + 26 * scale, y + 295 * scale);\n    ctx.bezierCurveTo(\n      x - 1 * scale,\n      y + 287 * scale,\n      x + 2 * scale,\n      y + 284 * scale,\n      x + 28 * scale,\n      y + 277 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 46 * scale,\n      y + 272 * scale,\n      x + 68 * scale,\n      y + 257 * scale,\n      x + 82 * scale,\n      y + 244 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 90 * scale,\n      y + 237 * scale,\n      x + 89 * scale,\n      y + 236 * scale,\n      x + 97 * scale,\n      y + 231 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 109 * scale,\n      y + 248 * scale,\n      x + 108 * scale,\n      y + 227 * scale,\n      x + 115 * scale,\n      y + 228 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 127 * scale,\n      y + 231 * scale,\n      x + 119 * scale,\n      y + 234 * scale,\n      x + 134 * scale,\n      y + 237 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 154 * scale,\n      y + 264 * scale,\n      x + 169 * scale,\n      y + 282 * scale,\n      x + 172 * scale,\n      y + 300 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 151 * scale,\n      y + 300 * scale,\n      x + 163 * scale,\n      y + 315 * scale,\n      x + 159 * scale,\n      y + 319 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 113 * scale,\n      y + 285 * scale,\n      x + 88 * scale,\n      y + 314 * scale,\n      x + 26 * scale,\n      y + 295 * scale\n    );\n    ctx.closePath();\n    //    ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 255, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 3;\n    //    ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Orca Eye Patch (white)\n    ctx.beginPath();\n    ctx.moveTo(x + 184 * scale, y + 220 * scale);\n    ctx.bezierCurveTo(\n      x + 169 * scale,\n      y + 205 * scale,\n      x + 128 * scale,\n      y + 191 * scale,\n      x + 107 * scale,\n      y + 208 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 107 * scale,\n      y + 211 * scale,\n      x + 122 * scale,\n      y + 214 * scale,\n      x + 125 * scale,\n      y + 220 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 128 * scale,\n      y + 228 * scale,\n      x + 197 * scale,\n      y + 233 * scale,\n      x + 184 * scale,\n      y + 220 * scale\n    );\n    ctx.closePath();\n    //    ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 255, 1.0)\";\n    ctx.fill();\n\n    // Orca Saddle (gray)\n    ctx.beginPath();\n    ctx.moveTo(x + 506 * scale, y + 178 * scale);\n    ctx.bezierCurveTo(\n      x + 482 * scale,\n      y + 190 * scale,\n      x + 473 * scale,\n      y + 193 * scale,\n      x + 461 * scale,\n      y + 220 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 449 * scale,\n      y + 246 * scale,\n      x + 434 * scale,\n      y + 264 * scale,\n      x + 423 * scale,\n      y + 258 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 426 * scale,\n      y + 255 * scale,\n      x + 444 * scale,\n      y + 246 * scale,\n      x + 414 * scale,\n      y + 219 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 384 * scale,\n      y + 193 * scale,\n      x + 494 * scale,\n      y + 166 * scale,\n      x + 506 * scale,\n      y + 178 * scale\n    );\n    ctx.closePath();\n    //    ctx.fillStyle = colors.medGray;\n    ctx.fillStyle = \"rgba(128, 128, 128, 1.0)\";\n    ctx.fill();\n  };\n};\n\nexport default Orca;","// import colors from \"../styles/_colors.scss\";\n\nclass TharSheBlows{\n  constructor(position, sizeScale) {\n    this.sizeScale = sizeScale;\n    this.position = position;\n    this.rainbowOpacity = 0.3;\n  };\n\n  move = (velocityScale) => {\n    // him no move\n    velocityScale = 0;\n  };\n\n  draw = (ctx) => {\n    ctx.save();\n    let x = this.position[0];\n    let y = this.position[1];\n    const sizeScale = this.sizeScale;\n    const inverseScale = 1 - sizeScale;\n    \n    y += 100 * inverseScale;\n    ctx.beginPath();\n    ctx.moveTo(x + 312 * sizeScale, y + -100 * sizeScale);\n    ctx.bezierCurveTo(\n      x + 320 * sizeScale,\n      y + -100 * sizeScale,\n      x + 327 * sizeScale,\n      y + -95 * sizeScale,\n      x + 328 * sizeScale,\n      y + -89 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 343 * sizeScale,\n      y + -97 * sizeScale,\n      x + 361 * sizeScale,\n      y + -98 * sizeScale,\n      x + 376 * sizeScale,\n      y + -92 * sizeScale\n    );\n\n    ctx.bezierCurveTo(\n      x + 383 * sizeScale,\n      y + -89 * sizeScale,\n      x + 390 * sizeScale,\n      y + -82 * sizeScale,\n      x + 387 * sizeScale,\n      y + -76 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 395 * sizeScale,\n      y + -78 * sizeScale,\n      x + 409 * sizeScale,\n      y + -87 * sizeScale,\n      x + 413 * sizeScale,\n      y + -80 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 417 * sizeScale,\n      y + -73 * sizeScale,\n      x + 404 * sizeScale,\n      y + -75 * sizeScale,\n      x + 422 * sizeScale,\n      y + -75 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 438 * sizeScale,\n      y + -75 * sizeScale,\n      x + 431 * sizeScale,\n      y + -59 * sizeScale,\n      x + 429 * sizeScale,\n      y + -47 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 436 * sizeScale,\n      y + -43 * sizeScale,\n      x + 431 * sizeScale,\n      y + -35 * sizeScale,\n      x + 434 * sizeScale,\n      y + -27 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 437 * sizeScale,\n      y + -20 * sizeScale,\n      x + 437 * sizeScale,\n      y + -19 * sizeScale,\n      x + 433 * sizeScale,\n      y + -4 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 432 * sizeScale,\n      y + -2 * sizeScale,\n      x + 431 * sizeScale,\n      y + 0 * sizeScale,\n      x + 430 * sizeScale,\n      y + 2 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 429 * sizeScale,\n      y + 5 * sizeScale,\n      x + 430 * sizeScale,\n      y + 9 * sizeScale,\n      x + 430 * sizeScale,\n      y + 13 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 430 * sizeScale,\n      y + 21 * sizeScale,\n      x + 425 * sizeScale,\n      y + 28 * sizeScale,\n      x + 417 * sizeScale,\n      y + 31 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 415 * sizeScale,\n      y + 32 * sizeScale,\n      x + 412 * sizeScale,\n      y + 33 * sizeScale,\n      x + 409 * sizeScale,\n      y + 34 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 404 * sizeScale,\n      y + 37 * sizeScale,\n      x + 401 * sizeScale,\n      y + 44 * sizeScale,\n      x + 397 * sizeScale,\n      y + 49 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 388 * sizeScale,\n      y + 58 * sizeScale,\n      x + 373 * sizeScale,\n      y + 56 * sizeScale,\n      x + 360 * sizeScale,\n      y + 59 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 359 * sizeScale,\n      y + 59 * sizeScale,\n      x + 358 * sizeScale,\n      y + 60 * sizeScale,\n      x + 356 * sizeScale,\n      y + 61 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 354 * sizeScale,\n      y + 62 * sizeScale,\n      x + 354 * sizeScale,\n      y + 65 * sizeScale,\n      x + 353 * sizeScale,\n      y + 68 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 350 * sizeScale,\n      y + 78 * sizeScale,\n      x + 335 * sizeScale,\n      y + 80 * sizeScale,\n      x + 335 * sizeScale,\n      y + 91 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 335 * sizeScale,\n      y + 98 * sizeScale,\n      x + 327 * sizeScale,\n      y + 103 * sizeScale,\n      x + 327 * sizeScale,\n      y + 103 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 327 * sizeScale,\n      y + 105 * sizeScale,\n      x + 314 * sizeScale,\n      y + 107 * sizeScale,\n      x + 312 * sizeScale,\n      y + 101 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 309 * sizeScale,\n      y + 94 * sizeScale,\n      x + 303 * sizeScale,\n      y + 92 * sizeScale,\n      x + 298 * sizeScale,\n      y + 87 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 294 * sizeScale,\n      y + 81 * sizeScale,\n      x + 287 * sizeScale,\n      y + 74 * sizeScale,\n      x + 280 * sizeScale,\n      y + 71 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 267 * sizeScale,\n      y + 65 * sizeScale,\n      x + 254 * sizeScale,\n      y + 67 * sizeScale,\n      x + 245 * sizeScale,\n      y + 58 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 237 * sizeScale,\n      y + 51 * sizeScale,\n      x + 241 * sizeScale,\n      y + 37 * sizeScale,\n      x + 232 * sizeScale,\n      y + 33 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 228 * sizeScale,\n      y + 31 * sizeScale,\n      x + 220 * sizeScale,\n      y + 30 * sizeScale,\n      x + 217 * sizeScale,\n      y + 27 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 214 * sizeScale,\n      y + 24 * sizeScale,\n      x + 206 * sizeScale,\n      y + 21 * sizeScale,\n      x + 206 * sizeScale,\n      y + 6 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 206 * sizeScale,\n      y + 2 * sizeScale,\n      x + 211 * sizeScale,\n      y + -2 * sizeScale,\n      x + 212 * sizeScale,\n      y + -6 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 215 * sizeScale,\n      y + -18 * sizeScale,\n      x + 207 * sizeScale,\n      y + -10 * sizeScale,\n      x + 206 * sizeScale,\n      y + -28 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 206 * sizeScale,\n      y + -34 * sizeScale,\n      x + 213 * sizeScale,\n      y + -49 * sizeScale,\n      x + 218 * sizeScale,\n      y + -44 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 217 * sizeScale,\n      y + -59 * sizeScale,\n      x + 217 * sizeScale,\n      y + -62 * sizeScale,\n      x + 220 * sizeScale,\n      y + -68 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 223 * sizeScale,\n      y + -72 * sizeScale,\n      x + 236 * sizeScale,\n      y + -72 * sizeScale,\n      x + 242 * sizeScale,\n      y + -69 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 244 * sizeScale,\n      y + -75 * sizeScale,\n      x + 247 * sizeScale,\n      y + -89 * sizeScale,\n      x + 251 * sizeScale,\n      y + -86 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 257 * sizeScale,\n      y + -94 * sizeScale,\n      x + 268 * sizeScale,\n      y + -98 * sizeScale,\n      x + 277 * sizeScale,\n      y + -98 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 281 * sizeScale,\n      y + -96 * sizeScale,\n      x + 285 * sizeScale,\n      y + -92 * sizeScale,\n      x + 289 * sizeScale,\n      y + -92 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 291 * sizeScale,\n      y + -93 * sizeScale,\n      x + 293 * sizeScale,\n      y + -94 * sizeScale,\n      x + 295 * sizeScale,\n      y + -95 * sizeScale\n    );\n    ctx.bezierCurveTo(\n      x + 300 * sizeScale,\n      y + -97 * sizeScale,\n      x + 306 * sizeScale,\n      y + -100 * sizeScale,\n      x + 312 * sizeScale,\n      y + -100 * sizeScale\n    );\n    ctx.closePath();\n    ctx.fillStyle = \"rgba(255, 255, 255, 0.7)\";\n    // ctx.fillStyle = colors.tharSheBlows;\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 0.6)\";\n    // ctx.strokeStyle = colors.shadowBlack;\n    ctx.stroke();\n    ctx.clip();\n\n    ctx.beginPath();\n    ctx.transform(1, 0, 0, 1.4, 0, 0);\n    ctx.arc(x + 376 * sizeScale, 118 * sizeScale, 122 * sizeScale, 0, 2 * Math.PI);\n    ctx.closePath();\n    let rainbowStartX = x + 405 * sizeScale;\n    let rainbowEndX = x + 376 * sizeScale;\n    let rainbowEndY = 118 * sizeScale;\n    let rainbowRadius = 122 * sizeScale;\n    debugger\n    const rainbowGradient = ctx.createRadialGradient(\n      rainbowStartX,\n      0,\n      0,\n      rainbowEndX,\n      rainbowEndY,\n      rainbowRadius\n    );\n    rainbowGradient.addColorStop(0, \"rgba(255, 255, 255, 0.0)\");\n    rainbowGradient.addColorStop(0.74, \"rgba(255, 255, 255, 0.0)\");\n    rainbowGradient.addColorStop(0.77, \"rgba(255, 0, 255, 0.3)\");\n    rainbowGradient.addColorStop(0.79, \"rgba(127, 0, 255, 0.3)\");\n    rainbowGradient.addColorStop(0.82, \"rgba(0, 0, 255, 0.3)\");\n    rainbowGradient.addColorStop(0.85, \"rgba(0, 127, 127, 0.3)\");\n    rainbowGradient.addColorStop(0.87, \"rgba(0, 255, 0, 0.3)\");\n    rainbowGradient.addColorStop(0.91, \"rgba(255, 255, 0, 0.3)\");\n    rainbowGradient.addColorStop(0.96, \"rgba(255, 187, 0, 0.3)\");\n    rainbowGradient.addColorStop(0.99, \"rgba(255, 0, 0, 0.3)\");\n    rainbowGradient.addColorStop(1, \"rgba(255, 255, 255, 0.0)\");\n    // rainbowGradient.addColorStop(0, colors.transparent);\n    // rainbowGradient.addColorStop(0.74, colors.transparent);\n    // rainbowGradient.addColorStop(0.77, colors.rainbowViolet);\n    // rainbowGradient.addColorStop(0.79, colors.rainbowIndigo);\n    // rainbowGradient.addColorStop(0.82, colors.rainbowBlue);\n    // rainbowGradient.addColorStop(0.85, colors.rainbowAqua);\n    // rainbowGradient.addColorStop(0.87, colors.rainbowGreen);\n    // rainbowGradient.addColorStop(0.91, colors.rainbowYellow);\n    // rainbowGradient.addColorStop(0.96, colors.rainbowOrange);\n    // rainbowGradient.addColorStop(0.99, colors.rainbowRed);\n    // rainbowGradient.addColorStop(1, colors.transparent);\n\n    ctx.fillStyle = rainbowGradient;\n    ctx.fill();\n    ctx.transform(1, 0, 0, 1, 0, 0);\n    ctx.restore();\n  };\n};\nexport default TharSheBlows;","import colors from \"../styles/_colors.scss\";\n\nclass Waves {\n  constructor(sizeScale, position) {\n    this.sizeScale = sizeScale;\n    this.position = position;\n  };\n\n  move = () => {\n    if (this.position[0] <= -480 * this.sizeScale) {\n      this.position = [0, this.position[1]];\n    } else {\n      this.position = [this.position[0] - 2, this.position[1]];\n    }\n  };\n\n  draw = (ctx) => {\n\n    let x = this.position[0];\n    let sizeScale = this.sizeScale;\n\n    const skyCrestToTroughGradient = ctx.createLinearGradient(0, 75, 0, 120);\n    skyCrestToTroughGradient.addColorStop(0, \"rgba(147, 189, 244, 1.0)\");\n    skyCrestToTroughGradient.addColorStop(\n      0.555555556,\n      \"rgba(151, 202, 243, 1.0)\"\n    );\n    skyCrestToTroughGradient.addColorStop(1, \"rgba(154, 210, 243, 1.0)\");\n    // skyCrestToTroughGradient.addColorStop(0, colors.skyCrest);\n    // skyCrestToTroughGradient.addColorStop(0.555555556, colors.skyHorizon);\n    // skyCrestToTroughGradient.addColorStop(1, colors.skyTrough);\n\n    const oceanCrestToTroughGradient = ctx.createLinearGradient(0, 75, 0, 120);\n    oceanCrestToTroughGradient.addColorStop(0, \"rgba(90, 255, 255, 1.0)\");\n    oceanCrestToTroughGradient.addColorStop(\n      0.555555556,\n      \"rgba(87, 247, 250, 1.0)\"\n    );\n    oceanCrestToTroughGradient.addColorStop(1, \"rgba(85, 242, 247, 1.0)\");\n    // oceanCrestToTroughGradient.addColorStop(0, colors.oceanCrest);\n    // oceanCrestToTroughGradient.addColorStop(0.555555556, colors.oceanHorizon);\n    // oceanCrestToTroughGradient.addColorStop(1, colors.oceanTrough);\n\n\n    ctx.rect(0, 75, 1200, 45);\n    ctx.fillStyle = skyCrestToTroughGradient;\n    ctx.fill();\n    \n    for (let i = 0; i < Math.ceil(3 / sizeScale); i++){\n    \n      let x = (480 * sizeScale * i) + this.position[0];\n      ctx.save();\n      ctx.beginPath();\n      ctx.moveTo(x + 0 * sizeScale, 120 - 45 * sizeScale);\n      ctx.bezierCurveTo(\n        x + 100 * sizeScale,\n        120 - 45 * sizeScale,\n        x + 140 * sizeScale,\n        120,\n        x + 240 * sizeScale,\n        120\n      );\n      ctx.bezierCurveTo(\n        x + 340 * sizeScale,\n        120,\n        x + 380 * sizeScale,\n        120 - 45 * sizeScale,\n        x + 480 * sizeScale,\n        120 - 45 * sizeScale\n      );\n      ctx.lineTo(x + 480 * sizeScale, 120);\n      ctx.lineTo(x + 0 * sizeScale, 120);\n      ctx.lineTo(x + 0 * sizeScale, 120 - 45 * sizeScale);\n      ctx.closePath();\n      ctx.fillStyle = oceanCrestToTroughGradient;\n      ctx.fill();\n      ctx.restore();\n    }\n  };\n};\nexport default Waves;","// import colors from \"../styles/_colors.scss\";\nimport TharSheBlows from \"./thar_she_blows\";\n\nclass Waylon{\n  constructor(options) {\n    this.game = options.game;\n    this.freqAnalyzer = options.freqAnalyzer;\n    this.position = options.position;\n    this.sizeScale = options.sizeScale;\n    this.hitBox = {\n      frontX: 0,\n      midFrX: 0,\n      midRrX: 0,\n      rearX: 0,\n      dorsalY: 0,\n      midY: 0,\n      ventralY: 0\n    }\n    this.calculateHitBox();\n    this.velocity = options.velocity;\n    \n    // NOTE: rotation in Canvas is disappointing, and can wreak havoc with my\n    //   collision logic. Hopefully I can improve this in future updates.\n    // \n    // this.centerOfRotation = [\n    //   this.position[0] + this.sizeScale * 180,\n    //   this.position[1] + this.sizeScale * 116\n    // ]\n    // this.currentRotation = 0;\n\n    this.currentPitch = 0;\n  };\n\n  calculateHitBox = () => {\n    // Waylon model is x:466, y:233 at 1:1 scale\n    this.hitBox.frontX = this.position[0] + (this.sizeScale * 466);\n    this.hitBox.midFrX = this.position[0] + (this.sizeScale * 365);\n    this.hitBox.midRrX = this.position[0] + (this.sizeScale * 170);\n    this.hitBox.rearX = this.position[0];\n    this.hitBox.dorsalY = this.position[1];\n    this.hitBox.midY = this.position[1] + (this.sizeScale * 100);\n    this.hitBox.ventralY = this.position[1] + (this.sizeScale * 170);\n  }\n\n  move = (velocityScale) => {\n    let newPitch = this.freqAnalyzer.outputTopFreq();\n    let offsetY = this.velocity * velocityScale;\n    \n    if (newPitch > this.currentPitch) {\n      this.position = [this.position[0], this.position[1] - offsetY];\n      // level out near the surface\n        // if (this.position[1] <= 75 && this.currentRotation < 0) {\n        //   this.currentRotation++;\n        // }\n      // this.currentRotation--;\n    } else if (newPitch < this.currentPitch) {\n      this.position = [this.position[0], this.position[1] + offsetY];\n      // level out at depth limit\n      //   if (this.position[1] >= 675 && this.currentRotation > 0) {\n      //     this.currentRotation--;\n      //   } \n      // this.currentRotation++;\n    }\n\n    // set hard surface and depth limits\n    if (this.position[1] <= 125) {this.position = [this.position[0], 110]}\n    if (this.position[1] >= 749) {this.position = [this.position[0],  750]}\n    \n    // // set rotation limits\n    // if (this.currentRotation <= -15) {this.currentRotation = -15}\n    // if (this.currentRotation >= 30) {this.currentRotation = 30}\n\n    // hold breath underwater -- always a good idea for mammals\n    if (this.position[1] >= 115) { this.game.tharSheBlows = [] }\n\n    // breathe when on the surface\n    if (this.position[1] <= 115 && !this.game.tharSheBlows.length) {\n      this.game.add(\n        new TharSheBlows([this.position[0], 10], this.sizeScale)\n      );\n    }\n    // update hitBox with current position\n    this.calculateHitBox();\n    return this.currentPitch = newPitch;\n  };\n\n  draw = (ctx) => {\n    const x = this.position[0];\n    const y = this.position[1];\n    const scale = this.sizeScale;\n    const scaledLineWidth = function (lineW) {\n      return Math.floor(lineW * scale);\n    };\n\n    // ctx.translate(this.centerofRotation[0], this.centerOfRotation[1]);\n    // ctx.rotate((this.currentRotation * Math.PI) / 180);\n    // ctx.translate(-(this.centerofRotation[0]), -(this.centerOfRotation[1]));\n\n\n    // Waylon Left Pectoral Fin\n    ctx.beginPath();\n    ctx.moveTo(x + 224 * scale, y + 209 * scale);\n    ctx.bezierCurveTo(\n      x + 224 * scale,\n      y + 209 * scale,\n      x + 210 * scale,\n      y + 178 * scale,\n      x + 231 * scale,\n      y + 147 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 234 * scale,\n      y + 143 * scale,\n      x + 236 * scale,\n      y + 135 * scale,\n      x + 236 * scale,\n      y + 135 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 236 * scale,\n      y + 135 * scale,\n      x + 239 * scale,\n      y + 112 * scale,\n      x + 258 * scale,\n      y + 110 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 258 * scale,\n      y + 102 * scale,\n      x + 270 * scale,\n      y + 83 * scale,\n      x + 277 * scale,\n      y + 88 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 285 * scale,\n      y + 93 * scale,\n      x + 290 * scale,\n      y + 109 * scale,\n      x + 287 * scale,\n      y + 117 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 283 * scale,\n      y + 126 * scale,\n      x + 264 * scale,\n      y + 149 * scale,\n      x + 260 * scale,\n      y + 151 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 256 * scale,\n      y + 154 * scale,\n      x + 249 * scale,\n      y + 169 * scale,\n      x + 249 * scale,\n      y + 169 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 249 * scale,\n      y + 169 * scale,\n      x + 249 * scale,\n      y + 174 * scale,\n      x + 244 * scale,\n      y + 175 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 239 * scale,\n      y + 175 * scale,\n      x + 235 * scale,\n      y + 210 * scale,\n      x + 224 * scale,\n      y + 209 * scale\n    );\n    ctx.closePath();\n    ctx.fillStyle = \"rgba(225, 228, 235, 1.0)\";\n    // ctx.fillStyle = colors.waylonDkrGray;\n    ctx.fill();\n    ctx.lineWidth = scaledLineWidth(3);\n    ctx.stroke();\n\n    // Waylon Body Blue Fill\n    ctx.beginPath();\n    ctx.moveTo(x + 388 * scale, y + 103 * scale);\n    ctx.bezierCurveTo(\n      x + 374 * scale,\n      y + 106 * scale,\n      x + 354 * scale,\n      y + 114 * scale,\n      x + 336 * scale,\n      y + 134 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 305 * scale,\n      y + 171 * scale,\n      x + 207 * scale,\n      y + 176 * scale,\n      x + 183 * scale,\n      y + 171 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 154 * scale,\n      y + 165 * scale,\n      x + 119 * scale,\n      y + 155 * scale,\n      x + 70 * scale,\n      y + 138 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 69 * scale,\n      y + 137 * scale,\n      x + 68 * scale,\n      y + 137 * scale,\n      x + 68 * scale,\n      y + 138 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 64 * scale,\n      y + 142 * scale,\n      x + 58 * scale,\n      y + 142 * scale,\n      x + 56 * scale,\n      y + 141 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 55 * scale,\n      y + 141 * scale,\n      x + 54 * scale,\n      y + 141 * scale,\n      x + 54 * scale,\n      y + 142 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 49 * scale,\n      y + 148 * scale,\n      x + 17 * scale,\n      y + 183 * scale,\n      x + 2 * scale,\n      y + 159 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 2 * scale,\n      y + 159 * scale,\n      x + 16 * scale,\n      y + 148 * scale,\n      x + 16 * scale,\n      y + 143 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 15 * scale,\n      y + 133 * scale,\n      x + 23 * scale,\n      y + 129 * scale,\n      x + 26 * scale,\n      y + 127 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 34 * scale,\n      y + 124 * scale,\n      x + 23 * scale,\n      y + 118 * scale,\n      x + 35 * scale,\n      y + 112 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 36 * scale,\n      y + 112 * scale,\n      x + 36 * scale,\n      y + 110 * scale,\n      x + 37 * scale,\n      y + 110 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 42 * scale,\n      y + 111 * scale,\n      x + 39 * scale,\n      y + 110 * scale,\n      x + 38 * scale,\n      y + 109 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 37 * scale,\n      y + 109 * scale,\n      x + 37 * scale,\n      y + 109 * scale,\n      x + 37 * scale,\n      y + 109 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 40 * scale,\n      y + 107 * scale,\n      x + 33 * scale,\n      y + 104 * scale,\n      x + 45 * scale,\n      y + 98 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 43 * scale,\n      y + 95 * scale,\n      x + 45 * scale,\n      y + 93 * scale,\n      x + 50 * scale,\n      y + 90 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 46 * scale,\n      y + 87 * scale,\n      x + 54 * scale,\n      y + 84 * scale,\n      x + 51 * scale,\n      y + 82 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 53 * scale,\n      y + 80 * scale,\n      x + 69 * scale,\n      y + 97 * scale,\n      x + 68 * scale,\n      y + 109 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 57 * scale,\n      y + 113 * scale,\n      x + 57 * scale,\n      y + 113 * scale,\n      x + 57 * scale,\n      y + 113 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 68 * scale,\n      y + 108 * scale,\n      x + 99 * scale,\n      y + 103 * scale,\n      x + 117 * scale,\n      y + 85 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 116 * scale,\n      y + 81 * scale,\n      x + 116 * scale,\n      y + 80 * scale,\n      x + 121 * scale,\n      y + 77 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 115 * scale,\n      y + 64 * scale,\n      x + 125 * scale,\n      y + 61 * scale,\n      x + 139 * scale,\n      y + 68 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 177 * scale,\n      y + 26 * scale,\n      x + 231 * scale,\n      y + 21 * scale,\n      x + 286 * scale,\n      y + 12 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 286 * scale,\n      y + 12 * scale,\n      x + 286 * scale,\n      y + 12 * scale,\n      x + 286 * scale,\n      y + 12 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 309 * scale,\n      y,\n      x + 329 * scale,\n      y - 1 * scale,\n      x + 360 * scale,\n      y + 13 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 363 * scale,\n      y + 12 * scale,\n      x + 435 * scale,\n      y + 21 * scale,\n      x + 439 * scale,\n      y + 24 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 447 * scale,\n      y + 24 * scale,\n      x + 450 * scale,\n      y + 26 * scale,\n      x + 448 * scale,\n      y + 33 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 448 * scale,\n      y + 33 * scale,\n      x + 449 * scale,\n      y + 34 * scale,\n      x + 449 * scale,\n      y + 34 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 453 * scale,\n      y + 35 * scale,\n      x + 465 * scale,\n      y + 41 * scale,\n      x + 462 * scale,\n      y + 48 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 459 * scale,\n      y + 57 * scale,\n      x + 457 * scale,\n      y + 49 * scale,\n      x + 461 * scale,\n      y + 60 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 461 * scale,\n      y + 60 * scale,\n      x + 461 * scale,\n      y + 60 * scale,\n      x + 461 * scale,\n      y + 60 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 461 * scale,\n      y + 66 * scale,\n      x + 456 * scale,\n      y + 66 * scale,\n      x + 454 * scale,\n      y + 65 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 454 * scale,\n      y + 65 * scale,\n      x + 454 * scale,\n      y + 65 * scale,\n      x + 454 * scale,\n      y + 66 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 452 * scale,\n      y + 66 * scale,\n      x + 444 * scale,\n      y + 70 * scale,\n      x + 444 * scale,\n      y + 84 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 444 * scale,\n      y + 85 * scale,\n      x + 444 * scale,\n      y + 85 * scale,\n      x + 443 * scale,\n      y + 86 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 439 * scale,\n      y + 88 * scale,\n      x + 438 * scale,\n      y + 93 * scale,\n      x + 438 * scale,\n      y + 94 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 438 * scale,\n      y + 94 * scale,\n      x + 438 * scale,\n      y + 94 * scale,\n      x + 438 * scale,\n      y + 95 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 437 * scale,\n      y + 96 * scale,\n      x + 435 * scale,\n      y + 99 * scale,\n      x + 429 * scale,\n      y + 98 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 429 * scale,\n      y + 98 * scale,\n      x + 428 * scale,\n      y + 98 * scale,\n      x + 428 * scale,\n      y + 98 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 418 * scale,\n      y + 106 * scale,\n      x + 410 * scale,\n      y + 102 * scale,\n      x + 408 * scale,\n      y + 101 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 408 * scale,\n      y + 101 * scale,\n      x + 408 * scale,\n      y + 101 * scale,\n      x + 408 * scale,\n      y + 101 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 406 * scale,\n      y + 101 * scale,\n      x + 399 * scale,\n      y + 101 * scale,\n      x + 388 * scale,\n      y + 103 * scale\n    );\n    ctx.closePath();\n    ctx.fillStyle = \"rgba(50, 102, 158, 1.0)\";\n    // ctx.fillStyle = colors.waylonBlue;\n    ctx.fill();\n\n    // Waylon Ventral Gray Fill\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(x + 220 * scale, y + 172 * scale);\n    ctx.bezierCurveTo(\n      x + 218 * scale,\n      y + 172 * scale,\n      x + 224 * scale,\n      y + 121 * scale,\n      x + 244 * scale,\n      y + 108 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 284 * scale,\n      y + 80 * scale,\n      x + 283 * scale,\n      y + 91 * scale,\n      x + 304 * scale,\n      y + 85 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 313 * scale,\n      y + 80 * scale,\n      x + 360 * scale,\n      y + 59 * scale,\n      x + 373 * scale,\n      y + 47 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 395 * scale,\n      y + 27 * scale,\n      x + 449 * scale,\n      y + 33 * scale,\n      x + 449 * scale,\n      y + 33 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 452 * scale,\n      y + 35 * scale,\n      x + 464 * scale,\n      y + 40 * scale,\n      x + 462 * scale,\n      y + 48 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 459 * scale,\n      y + 57 * scale,\n      x + 456 * scale,\n      y + 49 * scale,\n      x + 460 * scale,\n      y + 59 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 460 * scale,\n      y + 59 * scale,\n      x + 460 * scale,\n      y + 59 * scale,\n      x + 460 * scale,\n      y + 60 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 460 * scale,\n      y + 65 * scale,\n      x + 455 * scale,\n      y + 65 * scale,\n      x + 454 * scale,\n      y + 65 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 454 * scale,\n      y + 65 * scale,\n      x + 453 * scale,\n      y + 65 * scale,\n      x + 453 * scale,\n      y + 65 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 451 * scale,\n      y + 66 * scale,\n      x + 443 * scale,\n      y + 69 * scale,\n      x + 444 * scale,\n      y + 83 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 444 * scale,\n      y + 84 * scale,\n      x + 443 * scale,\n      y + 85 * scale,\n      x + 443 * scale,\n      y + 85 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 438 * scale,\n      y + 87 * scale,\n      x + 437 * scale,\n      y + 92 * scale,\n      x + 437 * scale,\n      y + 93 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 437 * scale,\n      y + 94 * scale,\n      x + 437 * scale,\n      y + 94 * scale,\n      x + 437 * scale,\n      y + 94 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 437 * scale,\n      y + 95 * scale,\n      x + 434 * scale,\n      y + 98 * scale,\n      x + 429 * scale,\n      y + 97 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 428 * scale,\n      y + 97 * scale,\n      x + 428 * scale,\n      y + 97 * scale,\n      x + 427 * scale,\n      y + 97 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 418 * scale,\n      y + 105 * scale,\n      x + 409 * scale,\n      y + 102 * scale,\n      x + 408 * scale,\n      y + 101 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 408 * scale,\n      y + 101 * scale,\n      x + 407 * scale,\n      y + 101 * scale,\n      x + 407 * scale,\n      y + 101 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 403 * scale,\n      y + 100 * scale,\n      x + 366 * scale,\n      y + 99 * scale,\n      x + 336 * scale,\n      y + 134 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 304 * scale,\n      y + 170 * scale,\n      x + 245 * scale,\n      y + 170 * scale,\n      x + 220 * scale,\n      y + 172 * scale\n    );\n    ctx.closePath();\n    ctx.fillStyle = \"rgba(226, 232, 247, 1.0)\";\n    // ctx.fillStyle = colors.waylonGray;\n    ctx.fill();\n\n    // Waylon Ventral Area - Lower Wrinkle, Shadow\n    ctx.beginPath();\n    ctx.moveTo(x + 231 * scale, y + 153 * scale);\n    ctx.bezierCurveTo(\n      x + 235 * scale,\n      y + 152 * scale,\n      x + 252 * scale,\n      y + 154 * scale,\n      x + 280 * scale,\n      y + 148 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 296 * scale,\n      y + 150 * scale,\n      x + 325 * scale,\n      y + 135 * scale,\n      x + 340 * scale,\n      y + 120 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 367 * scale,\n      y + 95 * scale,\n      x + 419 * scale,\n      y + 57 * scale,\n      x + 433 * scale,\n      y + 65 * scale\n    );\n    ctx.lineWidth = scaledLineWidth(3);\n    ctx.strokeStyle = \"rgba(191, 192, 193, 1.0)\";\n    // ctx.strokeStyle = colors.waylonWrinkShd;\n    ctx.stroke();\n\n    // Waylon Ventral Area - Lower Wrinkle, Highlight\n    ctx.beginPath();\n    ctx.moveTo(x + 228 * scale, y + 153 * scale);\n    ctx.bezierCurveTo(\n      x + 269 * scale,\n      y + 155 * scale,\n      x + 253 * scale,\n      y + 153 * scale,\n      x + 280 * scale,\n      y + 148 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 312 * scale,\n      y + 150 * scale,\n      x + 340 * scale,\n      y + 123 * scale,\n      x + 353 * scale,\n      y + 109 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 386 * scale,\n      y + 86 * scale,\n      x + 416 * scale,\n      y + 61 * scale,\n      x + 437 * scale,\n      y + 65 * scale\n    );\n    ctx.lineWidth = scaledLineWidth(4);\n    ctx.strokeStyle = \"rgba(226, 232, 247, 0.9)\";\n    // ctx.strokeStyle = colors.waylonWrinkHlt;\n    ctx.stroke();\n\n    // Waylon Ventral Area - Middle Wrinkle, shadow\n    ctx.beginPath();\n    ctx.moveTo(x + 230 * scale, y + 147 * scale);\n    ctx.bezierCurveTo(\n      x + 329 * scale,\n      y + 147 * scale,\n      x + 368 * scale,\n      y + 61 * scale,\n      x + 417 * scale,\n      y + 63 * scale\n    );\n    ctx.lineWidth = scaledLineWidth(3);\n    ctx.strokeStyle = \"rgba(191, 192, 193, 1.0)\";\n    // ctx.strokeStyle = colors.waylonWrinkShd;\n    ctx.stroke();\n\n    // Waylon Ventral Area - Middle Wrinkle, Highlight\n    ctx.beginPath();\n    ctx.moveTo(x + 226 * scale, y + 147 * scale);\n    ctx.bezierCurveTo(\n      x + 328 * scale,\n      y + 153 * scale,\n      x + 378 * scale,\n      y + 55 * scale,\n      x + 416 * scale,\n      y + 63 * scale\n    );\n    ctx.lineWidth = scaledLineWidth(4);\n    ctx.strokeStyle = \"rgba(226, 232, 247, 0.9)\";\n    // ctx.strokeStyle = colors.waylonWrinkHlt;\n    ctx.stroke();\n\n    // Waylon Ventral Area - Top Wrinkle, Shadow\n    ctx.beginPath();\n    ctx.moveTo(x + 241 * scale, y + 125 * scale);\n    ctx.bezierCurveTo(\n      x + 254 * scale,\n      y + 132 * scale,\n      x + 293 * scale,\n      y + 126 * scale,\n      x + 304 * scale,\n      y + 115 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 315 * scale,\n      y + 104 * scale,\n      x + 375 * scale,\n      y + 63 * scale,\n      x + 392 * scale,\n      y + 65 * scale\n    );\n    ctx.lineWidth = scaledLineWidth(3);\n    ctx.strokeStyle = \"rgba(191, 192, 193, 1.0)\";\n    // ctx.strokeStyle = colors.waylonWrinkShd;\n    ctx.stroke();\n\n    // Waylon Ventral Area - Top Wrinkle, Highlight\n    ctx.beginPath();\n    ctx.moveTo(x + 238 * scale, y + 122 * scale);\n    ctx.bezierCurveTo(\n      x + 251 * scale,\n      y + 137 * scale,\n      x + 298 * scale,\n      y + 125 * scale,\n      x + 309 * scale,\n      y + 114 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 323 * scale,\n      y + 103 * scale,\n      x + 374 * scale,\n      y + 65 * scale,\n      x + 396 * scale,\n      y + 64 * scale\n    );\n    ctx.lineWidth = scaledLineWidth(4);\n    ctx.strokeStyle = \"rgba(226, 232, 247, 0.9)\";\n    // ctx.strokeStyle = colors.waylonWrinkHlt;\n    ctx.stroke();\n\n    // Waylon Body Outline\n    ctx.restore();\n    ctx.beginPath();\n    ctx.moveTo(x + 389 * scale, y + 103 * scale);\n    ctx.bezierCurveTo(\n      x + 374 * scale,\n      y + 106 * scale,\n      x + 355 * scale,\n      y + 114 * scale,\n      x + 337 * scale,\n      y + 134 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 305 * scale,\n      y + 171 * scale,\n      x + 208 * scale,\n      y + 176 * scale,\n      x + 184 * scale,\n      y + 171 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 155 * scale,\n      y + 165 * scale,\n      x + 120 * scale,\n      y + 155 * scale,\n      x + 70 * scale,\n      y + 138 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 70 * scale,\n      y + 137 * scale,\n      x + 69 * scale,\n      y + 137 * scale,\n      x + 68 * scale,\n      y + 138 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 65 * scale,\n      y + 142 * scale,\n      x + 59 * scale,\n      y + 142 * scale,\n      x + 56 * scale,\n      y + 141 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 56 * scale,\n      y + 141 * scale,\n      x + 55 * scale,\n      y + 141 * scale,\n      x + 55 * scale,\n      y + 142 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 50 * scale,\n      y + 148 * scale,\n      x + 17 * scale,\n      y + 183 * scale,\n      x + 3 * scale,\n      y + 159 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 2 * scale,\n      y + 159 * scale,\n      x + 16 * scale,\n      y + 148 * scale,\n      x + 16 * scale,\n      y + 143 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 16 * scale,\n      y + 133 * scale,\n      x + 23 * scale,\n      y + 129 * scale,\n      x + 27 * scale,\n      y + 127 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 34 * scale,\n      y + 124 * scale,\n      x + 23 * scale,\n      y + 118 * scale,\n      x + 36 * scale,\n      y + 112 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 36 * scale,\n      y + 112 * scale,\n      x + 37 * scale,\n      y + 110 * scale,\n      x + 38 * scale,\n      y + 110 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 42 * scale,\n      y + 111 * scale,\n      x + 39 * scale,\n      y + 110 * scale,\n      x + 39 * scale,\n      y + 109 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 41 * scale,\n      y + 107 * scale,\n      x + 34 * scale,\n      y + 104 * scale,\n      x + 46 * scale,\n      y + 98 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 43 * scale,\n      y + 95 * scale,\n      x + 46 * scale,\n      y + 93 * scale,\n      x + 50 * scale,\n      y + 90 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 47 * scale,\n      y + 87 * scale,\n      x + 54 * scale,\n      y + 84 * scale,\n      x + 52 * scale,\n      y + 82 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 54 * scale,\n      y + 80 * scale,\n      x + 69 * scale,\n      y + 97 * scale,\n      x + 69 * scale,\n      y + 109 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 57 * scale,\n      y + 113 * scale,\n      x + 57 * scale,\n      y + 113 * scale,\n      x + 57 * scale,\n      y + 113 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 68 * scale,\n      y + 108 * scale,\n      x + 100 * scale,\n      y + 103 * scale,\n      x + 117 * scale,\n      y + 85 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 117 * scale,\n      y + 81 * scale,\n      x + 116 * scale,\n      y + 80 * scale,\n      x + 121 * scale,\n      y + 77 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 115 * scale,\n      y + 64 * scale,\n      x + 125 * scale,\n      y + 61 * scale,\n      x + 139 * scale,\n      y + 68 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 177 * scale,\n      y + 26 * scale,\n      x + 231 * scale,\n      y + 21 * scale,\n      x + 286 * scale,\n      y + 12 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 286 * scale,\n      y + 12 * scale,\n      x + 286 * scale,\n      y + 12 * scale,\n      x + 287 * scale,\n      y + 12 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 309 * scale,\n      y,\n      x + 330 * scale,\n      y - 1 * scale,\n      x + 360 * scale,\n      y + 13 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 364 * scale,\n      y + 12 * scale,\n      x + 435 * scale,\n      y + 21 * scale,\n      x + 439 * scale,\n      y + 24 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 447 * scale,\n      y + 24 * scale,\n      x + 450 * scale,\n      y + 26 * scale,\n      x + 449 * scale,\n      y + 33 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 449 * scale,\n      y + 33 * scale,\n      x + 449 * scale,\n      y + 34 * scale,\n      x + 450 * scale,\n      y + 34 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 453 * scale,\n      y + 35 * scale,\n      x + 465 * scale,\n      y + 41 * scale,\n      x + 463 * scale,\n      y + 48 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 460 * scale,\n      y + 57 * scale,\n      x + 457 * scale,\n      y + 49 * scale,\n      x + 461 * scale,\n      y + 60 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 461 * scale,\n      y + 60 * scale,\n      x + 461 * scale,\n      y + 60 * scale,\n      x + 461 * scale,\n      y + 60 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 461 * scale,\n      y + 66 * scale,\n      x + 456 * scale,\n      y + 66 * scale,\n      x + 455 * scale,\n      y + 65 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 455 * scale,\n      y + 65 * scale,\n      x + 454 * scale,\n      y + 65 * scale,\n      x + 454 * scale,\n      y + 66 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 452 * scale,\n      y + 66 * scale,\n      x + 444 * scale,\n      y + 70 * scale,\n      x + 445 * scale,\n      y + 84 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 445 * scale,\n      y + 85 * scale,\n      x + 444 * scale,\n      y + 85 * scale,\n      x + 444 * scale,\n      y + 86 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 439 * scale,\n      y + 88 * scale,\n      x + 439 * scale,\n      y + 93 * scale,\n      x + 438 * scale,\n      y + 94 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 438 * scale,\n      y + 94 * scale,\n      x + 438 * scale,\n      y + 94 * scale,\n      x + 438 * scale,\n      y + 95 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 438 * scale,\n      y + 96 * scale,\n      x + 435 * scale,\n      y + 99 * scale,\n      x + 430 * scale,\n      y + 98 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 429 * scale,\n      y + 98 * scale,\n      x + 429 * scale,\n      y + 98 * scale,\n      x + 428 * scale,\n      y + 98 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 419 * scale,\n      y + 106 * scale,\n      x + 411 * scale,\n      y + 102 * scale,\n      x + 409 * scale,\n      y + 101 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 409 * scale,\n      y + 101 * scale,\n      x + 408 * scale,\n      y + 101 * scale,\n      x + 408 * scale,\n      y + 101 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 406 * scale,\n      y + 101 * scale,\n      x + 399 * scale,\n      y + 101 * scale,\n      x + 389 * scale,\n      y + 103 * scale\n    );\n    ctx.closePath();\n    ctx.lineWidth = scaledLineWidth(4);\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.stroke();\n\n    // Waylon Mouth\n    ctx.beginPath();\n    ctx.moveTo(x + 449 * scale, y + 31 * scale);\n    ctx.bezierCurveTo(\n      x + 448 * scale,\n      y + 33 * scale,\n      x + 445 * scale,\n      y + 37 * scale,\n      x + 436 * scale,\n      y + 34 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 420 * scale,\n      y + 35 * scale,\n      x + 404 * scale,\n      y + 35 * scale,\n      x + 375 * scale,\n      y + 35 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 330 * scale,\n      y + 34 * scale,\n      x + 290 * scale,\n      y + 39 * scale,\n      x + 284 * scale,\n      y + 72 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 289 * scale,\n      y + 36 * scale,\n      x + 329 * scale,\n      y + 28 * scale,\n      x + 374 * scale,\n      y + 31 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 412 * scale,\n      y + 33 * scale,\n      x + 427 * scale,\n      y + 29 * scale,\n      x + 439 * scale,\n      y + 31 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 448 * scale,\n      y + 32 * scale,\n      x + 448 * scale,\n      y + 32 * scale,\n      x + 449 * scale,\n      y + 30 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 449 * scale,\n      y + 31 * scale,\n      x + 449 * scale,\n      y + 31 * scale,\n      x + 449 * scale,\n      y + 31 * scale\n    );\n    ctx.closePath();\n    ctx.fillStyle = \"rgba(0, 0, 0, 1.0)\";\n    // ctx.fillStyle = colors.waylonBlack;\n    ctx.fill();\n    ctx.lineWidth = scaledLineWidth(2);\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.stroke();\n\n    // Waylon Blowhole\n    ctx.beginPath();\n    ctx.moveTo(x + 309 * scale, y + 9 * scale);\n    ctx.bezierCurveTo(\n      x + 309 * scale,\n      y + 9 * scale,\n      x + 318 * scale,\n      y + 7 * scale,\n      x + 332 * scale,\n      y + 9 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 318 * scale,\n      y + 13 * scale,\n      x + 312 * scale,\n      y + 11 * scale,\n      x + 309 * scale,\n      y + 9 * scale\n    );\n    ctx.closePath();\n    ctx.fillStyle = \"rgba(0, 0, 0, 1.0)\";\n    // ctx.fillStyle = colors.waylonBlack;\n    ctx.fill();\n    ctx.lineWidth = scaledLineWidth(1);\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.stroke();\n\n    // Waylon Eye, Sclera\n    ctx.beginPath();\n    ctx.moveTo(x + 278 * scale, y + 63 * scale);\n    ctx.bezierCurveTo(\n      x + 278 * scale,\n      y + 78 * scale,\n      x + 261 * scale,\n      y + 90 * scale,\n      x + 242 * scale,\n      y + 90 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 222 * scale,\n      y + 90 * scale,\n      x + 206 * scale,\n      y + 78 * scale,\n      x + 206 * scale,\n      y + 63 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 206 * scale,\n      y + 49 * scale,\n      x + 222 * scale,\n      y + 36 * scale,\n      x + 242 * scale,\n      y + 36 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 261 * scale,\n      y + 36 * scale,\n      x + 278 * scale,\n      y + 49 * scale,\n      x + 278 * scale,\n      y + 63 * scale\n    );\n    ctx.closePath();\n    ctx.fillStyle = \"rgba(253, 253, 255, 1.0)\";\n    // ctx.fillStyle = colors.waylonWhite;\n    ctx.fill();\n\n    // Waylon Eye, Iris\n    ctx.beginPath();\n    ctx.moveTo(x + 213 * scale, y + 63 * scale);\n    ctx.bezierCurveTo(\n      x + 213 * scale,\n      y + 76 * scale,\n      x + 228 * scale,\n      y + 87 * scale,\n      x + 245 * scale,\n      y + 87 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 262 * scale,\n      y + 87 * scale,\n      x + 276 * scale,\n      y + 76 * scale,\n      x + 276 * scale,\n      y + 63 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 276 * scale,\n      y + 49 * scale,\n      x + 262 * scale,\n      y + 38 * scale,\n      x + 245 * scale,\n      y + 38 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 228 * scale,\n      y + 38 * scale,\n      x + 213 * scale,\n      y + 49 * scale,\n      x + 213 * scale,\n      y + 63 * scale\n    );\n    ctx.closePath();\n    ctx.fillStyle = \"rgba(80, 116, 214, 1.0)\";\n    // ctx.fillStyle = colors.waylonEye;\n    ctx.fill();\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.stroke();\n\n    // Waylon Eye, Pupil\n    ctx.beginPath();\n    ctx.moveTo(x + 225 * scale, y + 63 * scale);\n    ctx.bezierCurveTo(\n      x + 225 * scale,\n      y + 73 * scale,\n      x + 234 * scale,\n      y + 81 * scale,\n      x + 245 * scale,\n      y + 81 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 256 * scale,\n      y + 81 * scale,\n      x + 265 * scale,\n      y + 73 * scale,\n      x + 265 * scale,\n      y + 63 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 265 * scale,\n      y + 54 * scale,\n      x + 256 * scale,\n      y + 46 * scale,\n      x + 245 * scale,\n      y + 46 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 234 * scale,\n      y + 46 * scale,\n      x + 225 * scale,\n      y + 54 * scale,\n      x + 225 * scale,\n      y + 63 * scale\n    );\n    ctx.closePath();\n    ctx.fillStyle = \"rgba(0, 0, 0, 1.0)\";\n    // ctx.fillStyle = colors.waylonBlack;\n    ctx.fill();\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.stroke();\n\n    // Waylon Eye, Bottom Shine\n    ctx.beginPath();\n    ctx.moveTo(x + 249 * scale, y + 76 * scale);\n    ctx.bezierCurveTo(\n      x + 250 * scale,\n      y + 76 * scale,\n      x + 252 * scale,\n      y + 76 * scale,\n      x + 253 * scale,\n      y + 78 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 253 * scale,\n      y + 79 * scale,\n      x + 252 * scale,\n      y + 80 * scale,\n      x + 251 * scale,\n      y + 81 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 250 * scale,\n      y + 82 * scale,\n      x + 248 * scale,\n      y + 81 * scale,\n      x + 247 * scale,\n      y + 80 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 247 * scale,\n      y + 79 * scale,\n      x + 248 * scale,\n      y + 77 * scale,\n      x + 249 * scale,\n      y + 76 * scale\n    );\n    ctx.closePath();\n    ctx.fillStyle = \"rgba(255, 255, 255, 0.7)\";\n    // ctx.fillStyle = colors.eyeShine;\n    ctx.fill();\n\n    // Waylon Eye, Top Shine\n    ctx.beginPath();\n    ctx.moveTo(x + 236 * scale, y + 44 * scale);\n    ctx.bezierCurveTo(\n      x + 240 * scale,\n      y + 42 * scale,\n      x + 244 * scale,\n      y + 44 * scale,\n      x + 246 * scale,\n      y + 47 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 247 * scale,\n      y + 50 * scale,\n      x + 245 * scale,\n      y + 54 * scale,\n      x + 241 * scale,\n      y + 56 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 238 * scale,\n      y + 58 * scale,\n      x + 233 * scale,\n      y + 56 * scale,\n      x + 232 * scale,\n      y + 53 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 230 * scale,\n      y + 50 * scale,\n      x + 232 * scale,\n      y + 46 * scale,\n      x + 236 * scale,\n      y + 44 * scale\n    );\n    ctx.closePath();\n    ctx.fillStyle = \"rgba(255, 255, 255, 0.7)\";\n    // ctx.fillStyle = colors.eyeShine;\n    ctx.fill();\n\n    // Waylon Eyelashes, Masking\n    ctx.beginPath();\n    ctx.moveTo(x + 241 * scale, y + 34 * scale);\n    ctx.bezierCurveTo(\n      x + 222 * scale,\n      y + 32 * scale,\n      x + 204 * scale,\n      y + 42 * scale,\n      x + 204 * scale,\n      y + 62 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 204 * scale,\n      y + 76 * scale,\n      x + 216 * scale,\n      y + 91 * scale,\n      x + 241 * scale,\n      y + 91 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 259 * scale,\n      y + 91 * scale,\n      x + 278 * scale,\n      y + 81 * scale,\n      x + 278 * scale,\n      y + 62 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 278 * scale,\n      y + 49 * scale,\n      x + 263 * scale,\n      y + 34 * scale,\n      x + 241 * scale,\n      y + 34 * scale\n    );\n    ctx.closePath();\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.stroke();\n\n    // Waylon Eyelashes\n    ctx.moveTo(x + 241 * scale, y + 90 * scale);\n    ctx.bezierCurveTo(\n      x + 218 * scale,\n      y + 90 * scale,\n      x + 205 * scale,\n      y + 73 * scale,\n      x + 207 * scale,\n      y + 63 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 211 * scale,\n      y + 51 * scale,\n      x + 219 * scale,\n      y + 51 * scale,\n      x + 230 * scale,\n      y + 43 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 232 * scale,\n      y + 41 * scale,\n      x + 234 * scale,\n      y + 40 * scale,\n      x + 236 * scale,\n      y + 39 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 259 * scale,\n      y + 34 * scale,\n      x + 276 * scale,\n      y + 48 * scale,\n      x + 276 * scale,\n      y + 63 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 277 * scale,\n      y + 81 * scale,\n      x + 258 * scale,\n      y + 90 * scale,\n      x + 241 * scale,\n      y + 90 * scale\n    );\n    ctx.closePath();\n    ctx.fillStyle = \"rgba(0, 0, 0, 1.0)\";\n    // ctx.fillStyle = colors.waylonBlack;\n    ctx.fill();\n\n    // Waylon Right Pectoral Fin\n    ctx.beginPath();\n    ctx.moveTo(x + 160 * scale, y + 230 * scale);\n    ctx.bezierCurveTo(\n      x + 160 * scale,\n      y + 230 * scale,\n      x + 147 * scale,\n      y + 200 * scale,\n      x + 167 * scale,\n      y + 169 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 171 * scale,\n      y + 165 * scale,\n      x + 173 * scale,\n      y + 157 * scale,\n      x + 173 * scale,\n      y + 157 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 173 * scale,\n      y + 157 * scale,\n      x + 175 * scale,\n      y + 134 * scale,\n      x + 194 * scale,\n      y + 132 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 194 * scale,\n      y + 124 * scale,\n      x + 206 * scale,\n      y + 105 * scale,\n      x + 214 * scale,\n      y + 110 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 222 * scale,\n      y + 115 * scale,\n      x + 227 * scale,\n      y + 130 * scale,\n      x + 223 * scale,\n      y + 139 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 220 * scale,\n      y + 148 * scale,\n      x + 201 * scale,\n      y + 171 * scale,\n      x + 197 * scale,\n      y + 173 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 192 * scale,\n      y + 176 * scale,\n      x + 186 * scale,\n      y + 191 * scale,\n      x + 186 * scale,\n      y + 191 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 186 * scale,\n      y + 191 * scale,\n      x + 185 * scale,\n      y + 196 * scale,\n      x + 180 * scale,\n      y + 196 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 176 * scale,\n      y + 197 * scale,\n      x + 171 * scale,\n      y + 232 * scale,\n      x + 160 * scale,\n      y + 230 * scale\n    );\n    ctx.closePath();\n    ctx.fillStyle = \"rgba(234, 237, 244, 1.0)\";\n    // ctx.fillStyle = colors.waylonLtrGray;\n    ctx.fill();\n    ctx.lineWidth = scaledLineWidth(3);\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.stroke();\n    // ctx.restore();\n  };\n};\n\nexport default Waylon;","// import colors from \"../styles/_colors.scss\";\nimport Enemy from \"./enemy\";\n\nclass WhiteShark extends Enemy {\n  constructor(options) {\n    super(options);\n    this.name = \"Great White Shark\";\n    this.hSize = 862;\n    this.vSize = 371;\n  }\n\n  calculateHitBox = () => {\n    // WhiteShark model is x:862, y:371 at scale 1:1\n    this.hitBox.frontX = this.position[0] + this.sizeScale * 10;\n    this.hitBox.rearX = this.position[0] + this.sizeScale * 460;\n    this.hitBox.dorsalY = this.position[1] + this.sizeScale * 65;\n    this.hitBox.ventralY = this.position[1] + this.sizeScale * 170;\n  };\n\n  isEating = () => {\n    this.calculateHitBox();\n    // COLLISION CHECKER\n    let waylon = this.game.waylon[0];\n    // first check if\n    if (\n      // this enemy's front is level with or beyond Waylon's nose\n      this.hitBox.frontX <= waylon.hitBox.frontX &&\n      // AND the rear of this enemy's hitbox is not yet past Waylon's tail\n      this.hitBox.rearX >= waylon.hitBox.rearX\n    ) {\n      // then check if...\n      if (\n        // this enemy's front is between Waylon's nose and chest\n        this.hitBox.frontX >= waylon.hitBox.midFrX\n      ) {\n        // and if so, return TRUE if the hitboxes overlap along the y-axis\n        return this.hitBox.dorsalY <= waylon.hitBox.midY &&\n        this.hitBox.ventralY >= waylon.hitBox.dorsalY\n        // and return FALSE if not.\n      }\n      else if (\n        // check if enemy's front is between Waylon's chest and dorsal fin\n        this.hitBox.frontX >= waylon.hitBox.midRrX\n      ) {\n        // and if so, return TRUE if the hitboxes overlap along the y-axis\n        return this.hitBox.dorsalY < waylon.hitBox.ventralY &&\n        this.hitBox.ventralY > waylon.hitBox.dorsalY\n        // and return FALSE if not.\n      }\n      else if (\n        // check if enemy's front is between Waylon's dorsal fin and tail\n        this.hitBox.frontX >= waylon.hitBox.rearX ||\n        // OR if enemy's rear is between Waylon's dorsal fin and tail\n        this.hitBox.rearX <= waylon.hitBox.midRrX\n      ) {\n        // and if so, return TRUE if the hitboxes overlap along the y-axis\n        return this.hitBox.dorsalY <= waylon.ventralY &&\n        this.hitBox.ventralY >= waylon.hitBox.midY\n        // and return FALSE if not.\n      } \n     } \n     else {\n      return false // but if the first condition wasn't met, return FALSE\n    }\n  };\n\n  draw = (ctx) => {\n    const x = this.position[0];\n    const y = this.position[1];\n    const scale = this.sizeScale;\n\n    // Shark - Right Pelvic Fin\n    ctx.beginPath();\n    ctx.moveTo(x + 546 * scale, y + 222 * scale);\n    ctx.bezierCurveTo(\n      x + 546 * scale,\n      y + 225 * scale,\n      x + 541 * scale,\n      y + 234 * scale,\n      x + 544 * scale,\n      y + 243 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 547 * scale,\n      y + 251 * scale,\n      x + 503 * scale,\n      y + 225 * scale,\n      x + 503 * scale,\n      y + 225 * scale\n    );\n    ctx.lineTo(x + 546 * scale, y + 222 * scale);\n    ctx.closePath();\n    // ctx.fillStyle = colors.sharkDkGray;\n    ctx.fillStyle = \"rgba(151, 165, 173, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 2;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Inside Mouth\n    ctx.beginPath();\n    ctx.moveTo(x + 100 * scale, y + 191 * scale);\n    ctx.bezierCurveTo(\n      x + 100 * scale,\n      y + 200 * scale,\n      x + 47 * scale,\n      y + 245 * scale,\n      x + 56 * scale,\n      y + 256 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 58 * scale,\n      y + 259 * scale,\n      x + 158 * scale,\n      y + 181 * scale,\n      x + 140 * scale,\n      y + 177 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 140 * scale,\n      y + 177 * scale,\n      x + 60 * scale,\n      y + 104 * scale,\n      x + 32 * scale,\n      y + 130 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 27 * scale,\n      y + 135 * scale,\n      x + 69 * scale,\n      y + 142 * scale,\n      x + 85 * scale,\n      y + 167 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 90 * scale,\n      y + 174 * scale,\n      x + 105 * scale,\n      y + 197 * scale,\n      x + 100 * scale,\n      y + 191 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.sharkMouthRed;\n    ctx.fillStyle = \"rgba(127, 60, 60, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 2;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Right Tooth #1, Light Gray\n    // ctx.fillStyle = colors.bgLtGray;\n    ctx.fillStyle = \"rgba(187, 187, 187, 1.0)\";\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.lineWidth = 0.5;\n    ctx.beginPath();\n    ctx.moveTo(x + 59 * scale, y + 248 * scale);\n    ctx.bezierCurveTo(\n      x + 59 * scale,\n      y + 248 * scale,\n      x + 59 * scale,\n      y + 247 * scale,\n      x + 58 * scale,\n      y + 248 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 57 * scale,\n      y + 248 * scale,\n      x + 57 * scale,\n      y + 250 * scale,\n      x + 55 * scale,\n      y + 249 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 53 * scale,\n      y + 248 * scale,\n      x + 52 * scale,\n      y + 247 * scale,\n      x + 52 * scale,\n      y + 247 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 52 * scale,\n      y + 247 * scale,\n      x + 54 * scale,\n      y + 250 * scale,\n      x + 54 * scale,\n      y + 250 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 55 * scale,\n      y + 251 * scale,\n      x + 55 * scale,\n      y + 252 * scale,\n      x + 55 * scale,\n      y + 253 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 55 * scale,\n      y + 253 * scale,\n      x + 55 * scale,\n      y + 254 * scale,\n      x + 55 * scale,\n      y + 253 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 56 * scale,\n      y + 253 * scale,\n      x + 59 * scale,\n      y + 249 * scale,\n      x + 58 * scale,\n      y + 248 * scale\n    );\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n\n    // Shark - Lower Jaw Right Tooth #2, Light Gray\n\n    ctx.beginPath();\n    ctx.moveTo(x + 61 * scale, y + 243 * scale);\n    ctx.bezierCurveTo(\n      x + 61 * scale,\n      y + 242 * scale,\n      x + 61 * scale,\n      y + 242 * scale,\n      x + 60 * scale,\n      y + 243 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 60 * scale,\n      y + 243 * scale,\n      x + 59 * scale,\n      y + 245 * scale,\n      x + 58 * scale,\n      y + 244 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 55 * scale,\n      y + 242 * scale,\n      x + 54 * scale,\n      y + 242 * scale,\n      x + 54 * scale,\n      y + 242 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 54 * scale,\n      y + 242 * scale,\n      x + 56 * scale,\n      y + 245 * scale,\n      x + 57 * scale,\n      y + 245 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 57 * scale,\n      y + 245 * scale,\n      x + 58 * scale,\n      y + 247 * scale,\n      x + 57 * scale,\n      y + 248 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 57 * scale,\n      y + 248 * scale,\n      x + 58 * scale,\n      y + 249 * scale,\n      x + 58 * scale,\n      y + 248 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 58 * scale,\n      y + 248 * scale,\n      x + 61 * scale,\n      y + 244 * scale,\n      x + 61 * scale,\n      y + 243 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.bgLtGray;\n    ctx.fillStyle = \"rgba(187, 187, 187, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Right Tooth #3, Light Gray\n    ctx.beginPath();\n    ctx.moveTo(x + 63 * scale, y + 241 * scale);\n    ctx.bezierCurveTo(\n      x + 63 * scale,\n      y + 240 * scale,\n      x + 63 * scale,\n      y + 240 * scale,\n      x + 63 * scale,\n      y + 241 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 62 * scale,\n      y + 241 * scale,\n      x + 61 * scale,\n      y + 242 * scale,\n      x + 60 * scale,\n      y + 241 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 58 * scale,\n      y + 239 * scale,\n      x + 57 * scale,\n      y + 238 * scale,\n      x + 57 * scale,\n      y + 238 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 57 * scale,\n      y + 238 * scale,\n      x + 58 * scale,\n      y + 241 * scale,\n      x + 58 * scale,\n      y + 242 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 59 * scale,\n      y + 242 * scale,\n      x + 59 * scale,\n      y + 244 * scale,\n      x + 58 * scale,\n      y + 244 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 58 * scale,\n      y + 245 * scale,\n      x + 58 * scale,\n      y + 246 * scale,\n      x + 59 * scale,\n      y + 245 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 59 * scale,\n      y + 245 * scale,\n      x + 63 * scale,\n      y + 242 * scale,\n      x + 63 * scale,\n      y + 241 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.bgLtGray;\n    ctx.fillStyle = \"rgba(187, 187, 187, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Right Tooth #4, Light Gray\n    ctx.beginPath();\n    ctx.moveTo(x + 65 * scale, y + 237 * scale);\n    ctx.bezierCurveTo(\n      x + 65 * scale,\n      y + 237 * scale,\n      x + 65 * scale,\n      y + 236 * scale,\n      x + 64 * scale,\n      y + 237 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 64 * scale,\n      y + 237 * scale,\n      x + 63 * scale,\n      y + 238 * scale,\n      x + 62 * scale,\n      y + 237 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 59 * scale,\n      y + 235 * scale,\n      x + 59 * scale,\n      y + 235 * scale,\n      x + 59 * scale,\n      y + 235 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 59 * scale,\n      y + 235 * scale,\n      x + 60 * scale,\n      y + 238 * scale,\n      x + 60 * scale,\n      y + 238 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 60 * scale,\n      y + 238 * scale,\n      x + 61 * scale,\n      y + 240 * scale,\n      x + 60 * scale,\n      y + 240 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 60 * scale,\n      y + 241 * scale,\n      x + 60 * scale,\n      y + 242 * scale,\n      x + 60 * scale,\n      y + 241 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 61 * scale,\n      y + 241 * scale,\n      x + 65 * scale,\n      y + 238 * scale,\n      x + 65 * scale,\n      y + 237 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.bgLtGray;\n    ctx.fillStyle = \"rgba(187, 187, 187, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Right Tooth #4A, Dark Gray\n    ctx.beginPath();\n    ctx.moveTo(x + 66 * scale, y + 238 * scale);\n    ctx.bezierCurveTo(\n      x + 66 * scale,\n      y + 237 * scale,\n      x + 66 * scale,\n      y + 237 * scale,\n      x + 66 * scale,\n      y + 238 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 65 * scale,\n      y + 238 * scale,\n      x + 64 * scale,\n      y + 239 * scale,\n      x + 64 * scale,\n      y + 238 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 63 * scale,\n      y + 237 * scale,\n      x + 62 * scale,\n      y + 237 * scale,\n      x + 62 * scale,\n      y + 237 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 62 * scale,\n      y + 237 * scale,\n      x + 62 * scale,\n      y + 239 * scale,\n      x + 63 * scale,\n      y + 239 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 63 * scale,\n      y + 240 * scale,\n      x + 62 * scale,\n      y + 241 * scale,\n      x + 62 * scale,\n      y + 241 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 62 * scale,\n      y + 242 * scale,\n      x + 62 * scale,\n      y + 242 * scale,\n      x + 62 * scale,\n      y + 242 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 63 * scale,\n      y + 242 * scale,\n      x + 66 * scale,\n      y + 239 * scale,\n      x + 66 * scale,\n      y + 238 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.sharkToothDkGray;\n    ctx.fillStyle = \"rgba(89, 89, 89, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Right Tooth #5, Light Gray\n    ctx.beginPath();\n    ctx.moveTo(x + 69 * scale, y + 234 * scale);\n    ctx.bezierCurveTo(\n      x + 69 * scale,\n      y + 233 * scale,\n      x + 69 * scale,\n      y + 233 * scale,\n      x + 68 * scale,\n      y + 233 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 67 * scale,\n      y + 233 * scale,\n      x + 67 * scale,\n      y + 235 * scale,\n      x + 65 * scale,\n      y + 234 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 63 * scale,\n      y + 232 * scale,\n      x + 62 * scale,\n      y + 231 * scale,\n      x + 62 * scale,\n      y + 231 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 62 * scale,\n      y + 231 * scale,\n      x + 64 * scale,\n      y + 234 * scale,\n      x + 64 * scale,\n      y + 234 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 64 * scale,\n      y + 235 * scale,\n      x + 64 * scale,\n      y + 236 * scale,\n      x + 64 * scale,\n      y + 237 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 64 * scale,\n      y + 237 * scale,\n      x + 64 * scale,\n      y + 238 * scale,\n      x + 64 * scale,\n      y + 238 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 65 * scale,\n      y + 238 * scale,\n      x + 68 * scale,\n      y + 235 * scale,\n      x + 69 * scale,\n      y + 234 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.bgLtGray;\n    ctx.fillStyle = \"rgba(187, 187, 187, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Right Tooth #5A, Dark Gray\n    ctx.beginPath();\n    ctx.moveTo(x + 69 * scale, y + 235 * scale);\n    ctx.bezierCurveTo(\n      x + 69 * scale,\n      y + 234 * scale,\n      x + 70 * scale,\n      y + 234 * scale,\n      x + 69 * scale,\n      y + 234 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 69 * scale,\n      y + 235 * scale,\n      x + 68 * scale,\n      y + 236 * scale,\n      x + 67 * scale,\n      y + 235 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 66 * scale,\n      y + 234 * scale,\n      x + 65 * scale,\n      y + 234 * scale,\n      x + 65 * scale,\n      y + 234 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 65 * scale,\n      y + 234 * scale,\n      x + 66 * scale,\n      y + 236 * scale,\n      x + 66 * scale,\n      y + 236 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 66 * scale,\n      y + 237 * scale,\n      x + 66 * scale,\n      y + 238 * scale,\n      x + 65 * scale,\n      y + 238 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 65 * scale,\n      y + 239 * scale,\n      x + 65 * scale,\n      y + 239 * scale,\n      x + 65 * scale,\n      y + 239 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 66 * scale,\n      y + 239 * scale,\n      x + 69 * scale,\n      y + 236 * scale,\n      x + 69 * scale,\n      y + 235 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.sharkToothDkGray;\n    ctx.fillStyle = \"rgba(89, 89, 89, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Right Tooth #6, Light Gray\n    ctx.beginPath();\n    ctx.moveTo(x + 72 * scale, y + 230 * scale);\n    ctx.bezierCurveTo(\n      x + 73 * scale,\n      y + 230 * scale,\n      x + 73 * scale,\n      y + 230 * scale,\n      x + 72 * scale,\n      y + 230 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 71 * scale,\n      y + 230 * scale,\n      x + 70 * scale,\n      y + 231 * scale,\n      x + 69 * scale,\n      y + 230 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 67 * scale,\n      y + 228 * scale,\n      x + 66 * scale,\n      y + 227 * scale,\n      x + 66 * scale,\n      y + 228 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 66 * scale,\n      y + 228 * scale,\n      x + 68 * scale,\n      y + 231 * scale,\n      x + 68 * scale,\n      y + 231 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 68 * scale,\n      y + 232 * scale,\n      x + 68 * scale,\n      y + 233 * scale,\n      x + 68 * scale,\n      y + 234 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 67 * scale,\n      y + 234 * scale,\n      x + 68 * scale,\n      y + 235 * scale,\n      x + 68 * scale,\n      y + 235 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 69 * scale,\n      y + 234 * scale,\n      x + 72 * scale,\n      y + 231 * scale,\n      x + 72 * scale,\n      y + 230 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.bgLtGray;\n    ctx.fillStyle = \"rgba(187, 187, 187, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Right Tooth #7, Light Gray\n    ctx.beginPath();\n    ctx.moveTo(x + 76 * scale, y + 226 * scale);\n    ctx.bezierCurveTo(\n      x + 76 * scale,\n      y + 225 * scale,\n      x + 76 * scale,\n      y + 225 * scale,\n      x + 75 * scale,\n      y + 225 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 75 * scale,\n      y + 226 * scale,\n      x + 74 * scale,\n      y + 227 * scale,\n      x + 73 * scale,\n      y + 226 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 71 * scale,\n      y + 224 * scale,\n      x + 70 * scale,\n      y + 223 * scale,\n      x + 70 * scale,\n      y + 223 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 70 * scale,\n      y + 223 * scale,\n      x + 71 * scale,\n      y + 226 * scale,\n      x + 71 * scale,\n      y + 227 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 71 * scale,\n      y + 227 * scale,\n      x + 72 * scale,\n      y + 229 * scale,\n      x + 71 * scale,\n      y + 229 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 71 * scale,\n      y + 230 * scale,\n      x + 71 * scale,\n      y + 230 * scale,\n      x + 72 * scale,\n      y + 230 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 72 * scale,\n      y + 230 * scale,\n      x + 76 * scale,\n      y + 227 * scale,\n      x + 76 * scale,\n      y + 226 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.bgLtGray;\n    ctx.fillStyle = \"rgba(187, 187, 187, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Right Tooth #8, Light Gray\n    ctx.beginPath();\n    ctx.moveTo(x + 80 * scale, y + 223 * scale);\n    ctx.bezierCurveTo(\n      x + 80 * scale,\n      y + 222 * scale,\n      x + 80 * scale,\n      y + 222 * scale,\n      x + 79 * scale,\n      y + 222 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 79 * scale,\n      y + 222 * scale,\n      x + 78 * scale,\n      y + 224 * scale,\n      x + 77 * scale,\n      y + 223 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 75 * scale,\n      y + 221 * scale,\n      x + 74 * scale,\n      y + 220 * scale,\n      x + 74 * scale,\n      y + 220 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 74 * scale,\n      y + 220 * scale,\n      x + 75 * scale,\n      y + 223 * scale,\n      x + 75 * scale,\n      y + 223 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 75 * scale,\n      y + 224 * scale,\n      x + 76 * scale,\n      y + 225 * scale,\n      x + 75 * scale,\n      y + 226 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 75 * scale,\n      y + 226 * scale,\n      x + 75 * scale,\n      y + 227 * scale,\n      x + 76 * scale,\n      y + 227 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 76 * scale,\n      y + 227 * scale,\n      x + 80 * scale,\n      y + 224 * scale,\n      x + 80 * scale,\n      y + 223 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.bgLtGray;\n    ctx.fillStyle = \"rgba(187, 187, 187, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Right Tooth #8A, Dark Gray\n    ctx.beginPath();\n    ctx.moveTo(x + 80 * scale, y + 222 * scale);\n    ctx.bezierCurveTo(\n      x + 81 * scale,\n      y + 222 * scale,\n      x + 81 * scale,\n      y + 222 * scale,\n      x + 80 * scale,\n      y + 222 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 79 * scale,\n      y + 222 * scale,\n      x + 78 * scale,\n      y + 224 * scale,\n      x + 78 * scale,\n      y + 223 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 76 * scale,\n      y + 221 * scale,\n      x + 75 * scale,\n      y + 221 * scale,\n      x + 75 * scale,\n      y + 221 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 75 * scale,\n      y + 221 * scale,\n      x + 76 * scale,\n      y + 223 * scale,\n      x + 76 * scale,\n      y + 223 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 76 * scale,\n      y + 224 * scale,\n      x + 76 * scale,\n      y + 225 * scale,\n      x + 76 * scale,\n      y + 226 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 75 * scale,\n      y + 226 * scale,\n      x + 75 * scale,\n      y + 226 * scale,\n      x + 76 * scale,\n      y + 226 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 76 * scale,\n      y + 226 * scale,\n      x + 80 * scale,\n      y + 223 * scale,\n      x + 80 * scale,\n      y + 222 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.sharkToothDkGray;\n    ctx.fillStyle = \"rgba(89, 89, 89, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Right Tooth #9, Dark Gray\n    ctx.beginPath();\n    ctx.moveTo(x + 83 * scale, y + 219 * scale);\n    ctx.bezierCurveTo(\n      x + 83 * scale,\n      y + 218 * scale,\n      x + 84 * scale,\n      y + 218 * scale,\n      x + 83 * scale,\n      y + 218 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 82 * scale,\n      y + 218 * scale,\n      x + 81 * scale,\n      y + 220 * scale,\n      x + 80 * scale,\n      y + 219 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 78 * scale,\n      y + 217 * scale,\n      x + 77 * scale,\n      y + 216 * scale,\n      x + 77 * scale,\n      y + 216 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 77 * scale,\n      y + 216 * scale,\n      x + 79 * scale,\n      y + 219 * scale,\n      x + 79 * scale,\n      y + 219 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 79 * scale,\n      y + 220 * scale,\n      x + 79 * scale,\n      y + 221 * scale,\n      x + 79 * scale,\n      y + 222 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 78 * scale,\n      y + 222 * scale,\n      x + 79 * scale,\n      y + 223 * scale,\n      x + 79 * scale,\n      y + 223 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 80 * scale,\n      y + 223 * scale,\n      x + 83 * scale,\n      y + 219 * scale,\n      x + 83 * scale,\n      y + 219 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.sharkToothDkGray;\n    ctx.fillStyle = \"rgba(89, 89, 89, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Right Tooth #9A, Dark Gray\n    ctx.beginPath();\n    ctx.moveTo(x + 84 * scale, y + 218 * scale);\n    ctx.bezierCurveTo(\n      x + 84 * scale,\n      y + 218 * scale,\n      x + 85 * scale,\n      y + 217 * scale,\n      x + 84 * scale,\n      y + 218 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 83 * scale,\n      y + 218 * scale,\n      x + 83 * scale,\n      y + 220 * scale,\n      x + 81 * scale,\n      y + 219 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 79 * scale,\n      y + 217 * scale,\n      x + 78 * scale,\n      y + 217 * scale,\n      x + 78 * scale,\n      y + 217 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 78 * scale,\n      y + 217 * scale,\n      x + 80 * scale,\n      y + 219 * scale,\n      x + 80 * scale,\n      y + 220 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 80 * scale,\n      y + 220 * scale,\n      x + 81 * scale,\n      y + 222 * scale,\n      x + 81 * scale,\n      y + 222 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 80 * scale,\n      y + 223 * scale,\n      x + 81 * scale,\n      y + 223 * scale,\n      x + 81 * scale,\n      y + 223 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 82 * scale,\n      y + 223 * scale,\n      x + 84 * scale,\n      y + 219 * scale,\n      x + 84 * scale,\n      y + 218 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.sharkToothDkGray;\n    ctx.fillStyle = \"rgba(89, 89, 89, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Right Tooth #10, Dark Gray\n    ctx.beginPath();\n    ctx.moveTo(x + 86 * scale, y + 216 * scale);\n    ctx.bezierCurveTo(\n      x + 87 * scale,\n      y + 215 * scale,\n      x + 87 * scale,\n      y + 215 * scale,\n      x + 86 * scale,\n      y + 216 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 85 * scale,\n      y + 216 * scale,\n      x + 85 * scale,\n      y + 217 * scale,\n      x + 83 * scale,\n      y + 216 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 81 * scale,\n      y + 214 * scale,\n      x + 81 * scale,\n      y + 213 * scale,\n      x + 81 * scale,\n      y + 213 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 81 * scale,\n      y + 213 * scale,\n      x + 82 * scale,\n      y + 216 * scale,\n      x + 82 * scale,\n      y + 217 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 82 * scale,\n      y + 217 * scale,\n      x + 82 * scale,\n      y + 219 * scale,\n      x + 82 * scale,\n      y + 219 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 82 * scale,\n      y + 220 * scale,\n      x + 82 * scale,\n      y + 220 * scale,\n      x + 82 * scale,\n      y + 220 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 83 * scale,\n      y + 220 * scale,\n      x + 86 * scale,\n      y + 217 * scale,\n      x + 86 * scale,\n      y + 216 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.sharkToothDkGray;\n    ctx.fillStyle = \"rgba(89, 89, 89, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Right Tooth #11, Dark Gray\n    ctx.beginPath();\n    ctx.moveTo(x + 88 * scale, y + 212 * scale);\n    ctx.bezierCurveTo(\n      x + 88 * scale,\n      y + 212 * scale,\n      x + 88 * scale,\n      y + 212 * scale,\n      x + 87 * scale,\n      y + 212 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 87 * scale,\n      y + 212 * scale,\n      x + 86 * scale,\n      y + 213 * scale,\n      x + 85 * scale,\n      y + 212 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 83 * scale,\n      y + 210 * scale,\n      x + 82 * scale,\n      y + 210 * scale,\n      x + 82 * scale,\n      y + 210 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 82 * scale,\n      y + 210 * scale,\n      x + 84 * scale,\n      y + 213 * scale,\n      x + 84 * scale,\n      y + 213 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 84 * scale,\n      y + 213 * scale,\n      x + 84 * scale,\n      y + 215 * scale,\n      x + 84 * scale,\n      y + 215 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 83 * scale,\n      y + 216 * scale,\n      x + 84 * scale,\n      y + 216 * scale,\n      x + 84 * scale,\n      y + 216 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 85 * scale,\n      y + 216 * scale,\n      x + 88 * scale,\n      y + 213 * scale,\n      x + 88 * scale,\n      y + 212 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.sharkToothDkGray;\n    ctx.fillStyle = \"rgba(89, 89, 89, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Right Tooth #12, Dark Gray\n    ctx.beginPath();\n    ctx.moveTo(x + 91 * scale, y + 209 * scale);\n    ctx.bezierCurveTo(\n      x + 92 * scale,\n      y + 208 * scale,\n      x + 92 * scale,\n      y + 208 * scale,\n      x + 91 * scale,\n      y + 208 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 90 * scale,\n      y + 209 * scale,\n      x + 90 * scale,\n      y + 210 * scale,\n      x + 88 * scale,\n      y + 209 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 86 * scale,\n      y + 207 * scale,\n      x + 86 * scale,\n      y + 206 * scale,\n      x + 86 * scale,\n      y + 206 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 86 * scale,\n      y + 206 * scale,\n      x + 87 * scale,\n      y + 209 * scale,\n      x + 87 * scale,\n      y + 210 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 87 * scale,\n      y + 210 * scale,\n      x + 88 * scale,\n      y + 212 * scale,\n      x + 87 * scale,\n      y + 212 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 87 * scale,\n      y + 212 * scale,\n      x + 87 * scale,\n      y + 213 * scale,\n      x + 88 * scale,\n      y + 213 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 88 * scale,\n      y + 213 * scale,\n      x + 91 * scale,\n      y + 210 * scale,\n      x + 91 * scale,\n      y + 209 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.sharkToothDkGray;\n    ctx.fillStyle = \"rgba(89, 89, 89, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Right Tooth #13, Dark Gray\n    ctx.beginPath();\n    ctx.moveTo(x + 95 * scale, y + 206 * scale);\n    ctx.bezierCurveTo(\n      x + 95 * scale,\n      y + 205 * scale,\n      x + 95 * scale,\n      y + 205 * scale,\n      x + 95 * scale,\n      y + 205 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 94 * scale,\n      y + 206 * scale,\n      x + 93 * scale,\n      y + 207 * scale,\n      x + 92 * scale,\n      y + 206 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 90 * scale,\n      y + 204 * scale,\n      x + 89 * scale,\n      y + 203 * scale,\n      x + 89 * scale,\n      y + 203 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 89 * scale,\n      y + 203 * scale,\n      x + 91 * scale,\n      y + 206 * scale,\n      x + 91 * scale,\n      y + 207 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 91 * scale,\n      y + 207 * scale,\n      x + 91 * scale,\n      y + 208 * scale,\n      x + 91 * scale,\n      y + 209 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 90 * scale,\n      y + 209 * scale,\n      x + 91 * scale,\n      y + 210 * scale,\n      x + 91 * scale,\n      y + 210 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 92 * scale,\n      y + 210 * scale,\n      x + 95 * scale,\n      y + 207 * scale,\n      x + 95 * scale,\n      y + 206 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.sharkToothDkGray;\n    ctx.fillStyle = \"rgba(89, 89, 89, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Right Tooth #12-13A, Dark Gray\n    ctx.beginPath();\n    ctx.moveTo(x + 93 * scale, y + 207 * scale);\n    ctx.bezierCurveTo(\n      x + 93 * scale,\n      y + 206 * scale,\n      x + 93 * scale,\n      y + 206 * scale,\n      x + 92 * scale,\n      y + 206 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 92 * scale,\n      y + 206 * scale,\n      x + 91 * scale,\n      y + 208 * scale,\n      x + 90 * scale,\n      y + 207 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 88 * scale,\n      y + 205 * scale,\n      x + 87 * scale,\n      y + 204 * scale,\n      x + 87 * scale,\n      y + 204 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 87 * scale,\n      y + 204 * scale,\n      x + 88 * scale,\n      y + 207 * scale,\n      x + 88 * scale,\n      y + 207 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 89 * scale,\n      y + 208 * scale,\n      x + 89 * scale,\n      y + 209 * scale,\n      x + 88 * scale,\n      y + 210 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 88 * scale,\n      y + 210 * scale,\n      x + 88 * scale,\n      y + 211 * scale,\n      x + 89 * scale,\n      y + 211 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 89 * scale,\n      y + 211 * scale,\n      x + 92 * scale,\n      y + 208 * scale,\n      x + 93 * scale,\n      y + 207 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.sharkToothDkGray;\n    ctx.fillStyle = \"rgba(89, 89, 89, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Left Tooth #1, White\n    // ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 253, 1.0)\";\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.lineWidth = 0.5;\n    ctx.beginPath();\n    ctx.moveTo(x + 55 * scale, y + 251 * scale);\n    ctx.bezierCurveTo(\n      x + 55 * scale,\n      y + 251 * scale,\n      x + 55 * scale,\n      y + 251 * scale,\n      x + 55 * scale,\n      y + 251 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 55 * scale,\n      y + 252 * scale,\n      x + 55 * scale,\n      y + 253 * scale,\n      x + 53 * scale,\n      y + 253 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 51 * scale,\n      y + 253 * scale,\n      x + 51 * scale,\n      y + 253 * scale,\n      x + 51 * scale,\n      y + 253 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 51 * scale,\n      y + 253 * scale,\n      x + 53 * scale,\n      y + 254 * scale,\n      x + 53 * scale,\n      y + 254 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 53 * scale,\n      y + 254 * scale,\n      x + 54 * scale,\n      y + 255 * scale,\n      x + 54 * scale,\n      y + 256 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 54 * scale,\n      y + 256 * scale,\n      x + 54 * scale,\n      y + 256 * scale,\n      x + 55 * scale,\n      y + 256 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 55 * scale,\n      y + 255 * scale,\n      x + 56 * scale,\n      y + 252 * scale,\n      x + 55 * scale,\n      y + 251 * scale\n    );\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n\n    // Shark - Lower Jaw Left Tooth #2A, Light Gray\n    // ctx.fillStyle = colors.sharkToothLtGray;\n    ctx.fillStyle = \"rgba(163, 163, 163, 1.0)\";\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.lineWidth = 0.5;\n    ctx.beginPath();\n    ctx.moveTo(x + 66 * scale, y + 249 * scale);\n    ctx.bezierCurveTo(\n      x + 66 * scale,\n      y + 249 * scale,\n      x + 67 * scale,\n      y + 248 * scale,\n      x + 65 * scale,\n      y + 249 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 65 * scale,\n      y + 249 * scale,\n      x + 63 * scale,\n      y + 250 * scale,\n      x + 62 * scale,\n      y + 249 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 59 * scale,\n      y + 247 * scale,\n      x + 58 * scale,\n      y + 246 * scale,\n      x + 58 * scale,\n      y + 246 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 58 * scale,\n      y + 246 * scale,\n      x + 60 * scale,\n      y + 250 * scale,\n      x + 60 * scale,\n      y + 250 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 60 * scale,\n      y + 250 * scale,\n      x + 60 * scale,\n      y + 252 * scale,\n      x + 59 * scale,\n      y + 253 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 59 * scale,\n      y + 253 * scale,\n      x + 59 * scale,\n      y + 254 * scale,\n      x + 60 * scale,\n      y + 254 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 61 * scale,\n      y + 254 * scale,\n      x + 65 * scale,\n      y + 250 * scale,\n      x + 66 * scale,\n      y + 249 * scale\n    );\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n\n    // Shark - Lower Jaw Left Tooth #2, White\n    ctx.beginPath();\n    ctx.moveTo(x + 60 * scale, y + 251 * scale);\n    ctx.bezierCurveTo(\n      x + 60 * scale,\n      y + 250 * scale,\n      x + 61 * scale,\n      y + 250 * scale,\n      x + 59 * scale,\n      y + 251 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 59 * scale,\n      y + 251 * scale,\n      x + 58 * scale,\n      y + 253 * scale,\n      x + 56 * scale,\n      y + 252 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 53 * scale,\n      y + 250 * scale,\n      x + 52 * scale,\n      y + 250 * scale,\n      x + 52 * scale,\n      y + 250 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 52 * scale,\n      y + 250 * scale,\n      x + 54 * scale,\n      y + 253 * scale,\n      x + 54 * scale,\n      y + 253 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 55 * scale,\n      y + 253 * scale,\n      x + 55 * scale,\n      y + 255 * scale,\n      x + 54 * scale,\n      y + 256 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 54 * scale,\n      y + 256 * scale,\n      x + 54 * scale,\n      y + 257 * scale,\n      x + 55 * scale,\n      y + 257 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 56 * scale,\n      y + 256 * scale,\n      x + 60 * scale,\n      y + 252 * scale,\n      x + 60 * scale,\n      y + 251 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 253, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Left Tooth #3, White\n    ctx.beginPath();\n    ctx.moveTo(x + 67 * scale, y + 252 * scale);\n    ctx.bezierCurveTo(\n      x + 67 * scale,\n      y + 251 * scale,\n      x + 68 * scale,\n      y + 251 * scale,\n      x + 66 * scale,\n      y + 251 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 65 * scale,\n      y + 251 * scale,\n      x + 63 * scale,\n      y + 253 * scale,\n      x + 61 * scale,\n      y + 251 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 59 * scale,\n      y + 248 * scale,\n      x + 58 * scale,\n      y + 247 * scale,\n      x + 58 * scale,\n      y + 247 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 58 * scale,\n      y + 247 * scale,\n      x + 58 * scale,\n      y + 251 * scale,\n      x + 58 * scale,\n      y + 252 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 58 * scale,\n      y + 253 * scale,\n      x + 58 * scale,\n      y + 255 * scale,\n      x + 57 * scale,\n      y + 255 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 56 * scale,\n      y + 256 * scale,\n      x + 56 * scale,\n      y + 257 * scale,\n      x + 56 * scale,\n      y + 257 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 58 * scale,\n      y + 256 * scale,\n      x + 66 * scale,\n      y + 253 * scale,\n      x + 67 * scale,\n      y + 252 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 253, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Left Tooth #4A, White\n    ctx.beginPath();\n    ctx.moveTo(x + 68 * scale, y + 249 * scale);\n    ctx.bezierCurveTo(\n      x + 68 * scale,\n      y + 248 * scale,\n      x + 69 * scale,\n      y + 248 * scale,\n      x + 67 * scale,\n      y + 248 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 67 * scale,\n      y + 249 * scale,\n      x + 65 * scale,\n      y + 251 * scale,\n      x + 63 * scale,\n      y + 250 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 61 * scale,\n      y + 248 * scale,\n      x + 60 * scale,\n      y + 247 * scale,\n      x + 60 * scale,\n      y + 247 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 60 * scale,\n      y + 247 * scale,\n      x + 61 * scale,\n      y + 250 * scale,\n      x + 61 * scale,\n      y + 251 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 62 * scale,\n      y + 251 * scale,\n      x + 62 * scale,\n      y + 253 * scale,\n      x + 61 * scale,\n      y + 254 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 61 * scale,\n      y + 254 * scale,\n      x + 61 * scale,\n      y + 255 * scale,\n      x + 62 * scale,\n      y + 255 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 63 * scale,\n      y + 255 * scale,\n      x + 68 * scale,\n      y + 250 * scale,\n      x + 68 * scale,\n      y + 249 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 253, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Left Tooth #5A, Light Gray\n    ctx.beginPath();\n    ctx.moveTo(x + 72 * scale, y + 246 * scale);\n    ctx.bezierCurveTo(\n      x + 72 * scale,\n      y + 245 * scale,\n      x + 73 * scale,\n      y + 245 * scale,\n      x + 71 * scale,\n      y + 245 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 71 * scale,\n      y + 245 * scale,\n      x + 69 * scale,\n      y + 247 * scale,\n      x + 68 * scale,\n      y + 245 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 66 * scale,\n      y + 243 * scale,\n      x + 65 * scale,\n      y + 243 * scale,\n      x + 65 * scale,\n      y + 243 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 65 * scale,\n      y + 243 * scale,\n      x + 66 * scale,\n      y + 246 * scale,\n      x + 66 * scale,\n      y + 246 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 66 * scale,\n      y + 247 * scale,\n      x + 66 * scale,\n      y + 249 * scale,\n      x + 66 * scale,\n      y + 249 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 65 * scale,\n      y + 250 * scale,\n      x + 65 * scale,\n      y + 250 * scale,\n      x + 66 * scale,\n      y + 250 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 67 * scale,\n      y + 250 * scale,\n      x + 72 * scale,\n      y + 247 * scale,\n      x + 72 * scale,\n      y + 246 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.sharkToothLtGray;\n    ctx.fillStyle = \"rgba(163, 163, 163, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Left Tooth #4, White\n    ctx.beginPath();\n    ctx.moveTo(x + 68 * scale, y + 247 * scale);\n    ctx.bezierCurveTo(\n      x + 69 * scale,\n      y + 247 * scale,\n      x + 69 * scale,\n      y + 246 * scale,\n      x + 68 * scale,\n      y + 247 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 67 * scale,\n      y + 247 * scale,\n      x + 66 * scale,\n      y + 249 * scale,\n      x + 64 * scale,\n      y + 248 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 62 * scale,\n      y + 246 * scale,\n      x + 61 * scale,\n      y + 245 * scale,\n      x + 61 * scale,\n      y + 245 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 61 * scale,\n      y + 245 * scale,\n      x + 62 * scale,\n      y + 248 * scale,\n      x + 63 * scale,\n      y + 249 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 63 * scale,\n      y + 249 * scale,\n      x + 63 * scale,\n      y + 251 * scale,\n      x + 62 * scale,\n      y + 251 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 62 * scale,\n      y + 252 * scale,\n      x + 62 * scale,\n      y + 253 * scale,\n      x + 63 * scale,\n      y + 252 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 64 * scale,\n      y + 252 * scale,\n      x + 68 * scale,\n      y + 248 * scale,\n      x + 68 * scale,\n      y + 247 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 253, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Left Tooth #5, White\n    ctx.beginPath();\n    ctx.moveTo(x + 75 * scale, y + 243 * scale);\n    ctx.bezierCurveTo(\n      x + 75 * scale,\n      y + 242 * scale,\n      x + 75 * scale,\n      y + 242 * scale,\n      x + 74 * scale,\n      y + 242 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 73 * scale,\n      y + 242 * scale,\n      x + 72 * scale,\n      y + 245 * scale,\n      x + 70 * scale,\n      y + 243 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 67 * scale,\n      y + 241 * scale,\n      x + 66 * scale,\n      y + 241 * scale,\n      x + 66 * scale,\n      y + 241 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 66 * scale,\n      y + 241 * scale,\n      x + 68 * scale,\n      y + 244 * scale,\n      x + 68 * scale,\n      y + 245 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 68 * scale,\n      y + 245 * scale,\n      x + 68 * scale,\n      y + 247 * scale,\n      x + 67 * scale,\n      y + 248 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 70 * scale,\n      y + 248 * scale,\n      x + 67 * scale,\n      y + 249 * scale,\n      x + 68 * scale,\n      y + 249 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 69 * scale,\n      y + 249 * scale,\n      x + 74 * scale,\n      y + 244 * scale,\n      x + 75 * scale,\n      y + 243 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 253, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Left Tooth #6, White\n    ctx.beginPath();\n    ctx.moveTo(x + 77 * scale, y + 239 * scale);\n    ctx.bezierCurveTo(\n      x + 78 * scale,\n      y + 238 * scale,\n      x + 78 * scale,\n      y + 238 * scale,\n      x + 77 * scale,\n      y + 238 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 76 * scale,\n      y + 239 * scale,\n      x + 75 * scale,\n      y + 240 * scale,\n      x + 73 * scale,\n      y + 239 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 71 * scale,\n      y + 237 * scale,\n      x + 70 * scale,\n      y + 237 * scale,\n      x + 70 * scale,\n      y + 237 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 70 * scale,\n      y + 237 * scale,\n      x + 71 * scale,\n      y + 240 * scale,\n      x + 72 * scale,\n      y + 240 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 72 * scale,\n      y + 241 * scale,\n      x + 72 * scale,\n      y + 243 * scale,\n      x + 71 * scale,\n      y + 243 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 71 * scale,\n      y + 244 * scale,\n      x + 71 * scale,\n      y + 244 * scale,\n      x + 72 * scale,\n      y + 244 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 73 * scale,\n      y + 244 * scale,\n      x + 77 * scale,\n      y + 240 * scale,\n      x + 77 * scale,\n      y + 239 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 253, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Left Tooth #7A, Gray\n    ctx.beginPath();\n    ctx.moveTo(x + 84 * scale, y + 235 * scale);\n    ctx.bezierCurveTo(\n      x + 84 * scale,\n      y + 235 * scale,\n      x + 84 * scale,\n      y + 235 * scale,\n      x + 83 * scale,\n      y + 235 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 82 * scale,\n      y + 235 * scale,\n      x + 81 * scale,\n      y + 237 * scale,\n      x + 79 * scale,\n      y + 235 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 77 * scale,\n      y + 233 * scale,\n      x + 76 * scale,\n      y + 233 * scale,\n      x + 76 * scale,\n      y + 233 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 76 * scale,\n      y + 233 * scale,\n      x + 77 * scale,\n      y + 236 * scale,\n      x + 77 * scale,\n      y + 236 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 78 * scale,\n      y + 237 * scale,\n      x + 78 * scale,\n      y + 238 * scale,\n      x + 77 * scale,\n      y + 239 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 77 * scale,\n      y + 239 * scale,\n      x + 77 * scale,\n      y + 240 * scale,\n      x + 77 * scale,\n      y + 240 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 78 * scale,\n      y + 240 * scale,\n      x + 83 * scale,\n      y + 236 * scale,\n      x + 84 * scale,\n      y + 235 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.sharkToothLtGray;\n    ctx.fillStyle = \"rgba(163, 163, 163, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Left Tooth #7, White\n    ctx.beginPath();\n    ctx.moveTo(x + 82 * scale, y + 236 * scale);\n    ctx.bezierCurveTo(\n      x + 82 * scale,\n      y + 235 * scale,\n      x + 83 * scale,\n      y + 235 * scale,\n      x + 81 * scale,\n      y + 235 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 80 * scale,\n      y + 236 * scale,\n      x + 79 * scale,\n      y + 238 * scale,\n      x + 77 * scale,\n      y + 236 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 74 * scale,\n      y + 234 * scale,\n      x + 73 * scale,\n      y + 233 * scale,\n      x + 73 * scale,\n      y + 233 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 73 * scale,\n      y + 233 * scale,\n      x + 75 * scale,\n      y + 237 * scale,\n      x + 75 * scale,\n      y + 237 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 75 * scale,\n      y + 238 * scale,\n      x + 76 * scale,\n      y + 240 * scale,\n      x + 75 * scale,\n      y + 241 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 74 * scale,\n      y + 241 * scale,\n      x + 75 * scale,\n      y + 242 * scale,\n      x + 75 * scale,\n      y + 242 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 76 * scale,\n      y + 241 * scale,\n      x + 82 * scale,\n      y + 237 * scale,\n      x + 82 * scale,\n      y + 236 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 253, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Left Tooth #8, White\n    ctx.beginPath();\n    ctx.moveTo(x + 88 * scale, y + 231 * scale);\n    ctx.bezierCurveTo(\n      x + 88 * scale,\n      y + 231 * scale,\n      x + 88 * scale,\n      y + 231 * scale,\n      x + 87 * scale,\n      y + 231 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 87 * scale,\n      y + 231 * scale,\n      x + 85 * scale,\n      y + 233 * scale,\n      x + 84 * scale,\n      y + 232 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 81 * scale,\n      y + 230 * scale,\n      x + 80 * scale,\n      y + 229 * scale,\n      x + 80 * scale,\n      y + 229 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 80 * scale,\n      y + 229 * scale,\n      x + 82 * scale,\n      y + 233 * scale,\n      x + 82 * scale,\n      y + 233 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 82 * scale,\n      y + 233 * scale,\n      x + 82 * scale,\n      y + 235 * scale,\n      x + 82 * scale,\n      y + 236 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 81 * scale,\n      y + 236 * scale,\n      x + 82 * scale,\n      y + 237 * scale,\n      x + 82 * scale,\n      y + 237 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 83 * scale,\n      y + 236 * scale,\n      x + 88 * scale,\n      y + 233 * scale,\n      x + 88 * scale,\n      y + 231 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 253, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Left Tooth #9, Gray\n    ctx.beginPath();\n    ctx.moveTo(x + 91 * scale, y + 228 * scale);\n    ctx.bezierCurveTo(\n      x + 92 * scale,\n      y + 228 * scale,\n      x + 92 * scale,\n      y + 228 * scale,\n      x + 91 * scale,\n      y + 228 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 90 * scale,\n      y + 228 * scale,\n      x + 88 * scale,\n      y + 229 * scale,\n      x + 87 * scale,\n      y + 228 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 85 * scale,\n      y + 225 * scale,\n      x + 84 * scale,\n      y + 225 * scale,\n      x + 84 * scale,\n      y + 225 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 84 * scale,\n      y + 225 * scale,\n      x + 85 * scale,\n      y + 228 * scale,\n      x + 85 * scale,\n      y + 228 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 85 * scale,\n      y + 229 * scale,\n      x + 85 * scale,\n      y + 231 * scale,\n      x + 84 * scale,\n      y + 231 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 84 * scale,\n      y + 231 * scale,\n      x + 84 * scale,\n      y + 232 * scale,\n      x + 84 * scale,\n      y + 232 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 85 * scale,\n      y + 232 * scale,\n      x + 91 * scale,\n      y + 229 * scale,\n      x + 91 * scale,\n      y + 228 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.sharkToothLtGray;\n    ctx.fillStyle = \"rgba(163, 163, 163, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Left Tooth #10, Gray\n    ctx.beginPath();\n    ctx.moveTo(x + 96 * scale, y + 225 * scale);\n    ctx.bezierCurveTo(\n      x + 96 * scale,\n      y + 224 * scale,\n      x + 97 * scale,\n      y + 224 * scale,\n      x + 95 * scale,\n      y + 224 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 94 * scale,\n      y + 224 * scale,\n      x + 93 * scale,\n      y + 225 * scale,\n      x + 92 * scale,\n      y + 224 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 90 * scale,\n      y + 221 * scale,\n      x + 89 * scale,\n      y + 220 * scale,\n      x + 89 * scale,\n      y + 220 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 89 * scale,\n      y + 220 * scale,\n      x + 90 * scale,\n      y + 224 * scale,\n      x + 90 * scale,\n      y + 224 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 90 * scale,\n      y + 225 * scale,\n      x + 89 * scale,\n      y + 226 * scale,\n      x + 89 * scale,\n      y + 227 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 88 * scale,\n      y + 227 * scale,\n      x + 88 * scale,\n      y + 228 * scale,\n      x + 89 * scale,\n      y + 228 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 90 * scale,\n      y + 228 * scale,\n      x + 95 * scale,\n      y + 226 * scale,\n      x + 96 * scale,\n      y + 225 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.sharkToothLtGray;\n    ctx.fillStyle = \"rgba(163, 163, 163, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Left Tooth #11, Gray\n    ctx.beginPath();\n    ctx.moveTo(x + 98 * scale, y + 218 * scale);\n    ctx.bezierCurveTo(\n      x + 98 * scale,\n      y + 218 * scale,\n      x + 98 * scale,\n      y + 217 * scale,\n      x + 97 * scale,\n      y + 218 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 96 * scale,\n      y + 218 * scale,\n      x + 95 * scale,\n      y + 220 * scale,\n      x + 94 * scale,\n      y + 219 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 91 * scale,\n      y + 218 * scale,\n      x + 90 * scale,\n      y + 217 * scale,\n      x + 90 * scale,\n      y + 217 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 90 * scale,\n      y + 217 * scale,\n      x + 92 * scale,\n      y + 220 * scale,\n      x + 92 * scale,\n      y + 220 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 92 * scale,\n      y + 221 * scale,\n      x + 93 * scale,\n      y + 223 * scale,\n      x + 92 * scale,\n      y + 223 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 92 * scale,\n      y + 224 * scale,\n      x + 92 * scale,\n      y + 224 * scale,\n      x + 93 * scale,\n      y + 224 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 93 * scale,\n      y + 224 * scale,\n      x + 97 * scale,\n      y + 219 * scale,\n      x + 98 * scale,\n      y + 218 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.sharkToothLtGray;\n    ctx.fillStyle = \"rgba(163, 163, 163, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Left Tooth #12, Gray\n    ctx.beginPath();\n    ctx.moveTo(x + 102 * scale, y + 217 * scale);\n    ctx.bezierCurveTo(\n      x + 102 * scale,\n      y + 216 * scale,\n      x + 102 * scale,\n      y + 216 * scale,\n      x + 101 * scale,\n      y + 216 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 101 * scale,\n      y + 216 * scale,\n      x + 100 * scale,\n      y + 218 * scale,\n      x + 98 * scale,\n      y + 217 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 96 * scale,\n      y + 215 * scale,\n      x + 96 * scale,\n      y + 214 * scale,\n      x + 96 * scale,\n      y + 214 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 96 * scale,\n      y + 214 * scale,\n      x + 97 * scale,\n      y + 217 * scale,\n      x + 97 * scale,\n      y + 217 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 97 * scale,\n      y + 218 * scale,\n      x + 97 * scale,\n      y + 219 * scale,\n      x + 97 * scale,\n      y + 220 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 96 * scale,\n      y + 220 * scale,\n      x + 96 * scale,\n      y + 221 * scale,\n      x + 97 * scale,\n      y + 220 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 97 * scale,\n      y + 220 * scale,\n      x + 101 * scale,\n      y + 218 * scale,\n      x + 102 * scale,\n      y + 217 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.sharkToothLtGray;\n    ctx.fillStyle = \"rgba(163, 163, 163, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Lower Jaw Left Tooth #13, Gray\n    ctx.beginPath();\n    ctx.moveTo(x + 107 * scale, y + 213 * scale);\n    ctx.bezierCurveTo(\n      x + 107 * scale,\n      y + 212 * scale,\n      x + 108 * scale,\n      y + 212 * scale,\n      x + 106 * scale,\n      y + 212 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 105 * scale,\n      y + 212 * scale,\n      x + 104 * scale,\n      y + 214 * scale,\n      x + 103 * scale,\n      y + 213 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 100 * scale,\n      y + 210 * scale,\n      x + 99 * scale,\n      y + 210 * scale,\n      x + 99 * scale,\n      y + 210 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 99 * scale,\n      y + 210 * scale,\n      x + 101 * scale,\n      y + 213 * scale,\n      x + 101 * scale,\n      y + 213 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 101 * scale,\n      y + 214 * scale,\n      x + 101 * scale,\n      y + 216 * scale,\n      x + 100 * scale,\n      y + 216 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 100 * scale,\n      y + 217 * scale,\n      x + 100 * scale,\n      y + 217 * scale,\n      x + 101 * scale,\n      y + 217 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 102 * scale,\n      y + 217 * scale,\n      x + 106 * scale,\n      y + 214 * scale,\n      x + 107 * scale,\n      y + 213 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.sharkToothLtGray;\n    ctx.fillStyle = \"rgba(163, 163, 163, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Upper Jaw Right Tooth #8, Gray\n    ctx.beginPath();\n    ctx.moveTo(x + 84 * scale, y + 156 * scale);\n    ctx.bezierCurveTo(\n      x + 84 * scale,\n      y + 155 * scale,\n      x + 78 * scale,\n      y + 152 * scale,\n      x + 78 * scale,\n      y + 152 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 77 * scale,\n      y + 153 * scale,\n      x + 77 * scale,\n      y + 153 * scale,\n      x + 77 * scale,\n      y + 152 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 77 * scale,\n      y + 154 * scale,\n      x + 78 * scale,\n      y + 157 * scale,\n      x + 78 * scale,\n      y + 161 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 78 * scale,\n      y + 161 * scale,\n      x + 81 * scale,\n      y + 157 * scale,\n      x + 82 * scale,\n      y + 157 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 83 * scale,\n      y + 157 * scale,\n      x + 84 * scale,\n      y + 157 * scale,\n      x + 84 * scale,\n      y + 156 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.sharkToothLtGray;\n    ctx.fillStyle = \"rgba(163, 163, 163, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Upper Jaw Right Tooth #7, Gray\n    ctx.beginPath();\n    ctx.moveTo(x + 79 * scale, y + 152 * scale);\n    ctx.bezierCurveTo(\n      x + 79 * scale,\n      y + 151 * scale,\n      x + 72 * scale,\n      y + 147 * scale,\n      x + 71 * scale,\n      y + 147 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 70 * scale,\n      y + 148 * scale,\n      x + 70 * scale,\n      y + 148 * scale,\n      x + 71 * scale,\n      y + 149 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 72 * scale,\n      y + 150 * scale,\n      x + 72 * scale,\n      y + 158 * scale,\n      x + 72 * scale,\n      y + 158 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 72 * scale,\n      y + 158 * scale,\n      x + 75 * scale,\n      y + 153 * scale,\n      x + 77 * scale,\n      y + 153 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 78 * scale,\n      y + 153 * scale,\n      x + 79 * scale,\n      y + 153 * scale,\n      x + 79 * scale,\n      y + 152 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.sharkToothLtGray;\n    ctx.fillStyle = \"rgba(163, 163, 163, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Upper Jaw Right Tooth #6, Gray\n    ctx.beginPath();\n    ctx.moveTo(x + 72 * scale, y + 147 * scale);\n    ctx.bezierCurveTo(\n      x + 73 * scale,\n      y + 144 * scale,\n      x + 66 * scale,\n      y + 144 * scale,\n      x + 65 * scale,\n      y + 143 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 64 * scale,\n      y + 143 * scale,\n      x + 65 * scale,\n      y + 143 * scale,\n      x + 65 * scale,\n      y + 145 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 66 * scale,\n      y + 144 * scale,\n      x + 66 * scale,\n      y + 150 * scale,\n      x + 66 * scale,\n      y + 154 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 67 * scale,\n      y + 151 * scale,\n      x + 70 * scale,\n      y + 148 * scale,\n      x + 71 * scale,\n      y + 150 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 72 * scale,\n      y + 146 * scale,\n      x + 73 * scale,\n      y + 146 * scale,\n      x + 72 * scale,\n      y + 147 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.sharkToothLtGray;\n    ctx.fillStyle = \"rgba(163, 163, 163, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Upper Jaw Right Tooth #5, Gray\n    ctx.beginPath();\n    ctx.moveTo(x + 67 * scale, y + 143 * scale);\n    ctx.bezierCurveTo(\n      x + 67 * scale,\n      y + 142 * scale,\n      x + 60 * scale,\n      y + 139 * scale,\n      x + 59 * scale,\n      y + 140 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 58 * scale,\n      y + 140 * scale,\n      x + 58 * scale,\n      y + 141 * scale,\n      x + 59 * scale,\n      y + 141 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 60 * scale,\n      y + 142 * scale,\n      x + 61 * scale,\n      y + 150 * scale,\n      x + 61 * scale,\n      y + 150 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 61 * scale,\n      y + 150 * scale,\n      x + 64 * scale,\n      y + 144 * scale,\n      x + 65 * scale,\n      y + 144 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 66 * scale,\n      y + 143 * scale,\n      x + 67 * scale,\n      y + 144 * scale,\n      x + 67 * scale,\n      y + 143 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.sharkToothLtGray;\n    ctx.fillStyle = \"rgba(163, 163, 163, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Upper Jaw Right Tooth #4, Gray\n    ctx.beginPath();\n    ctx.moveTo(x + 62 * scale, y + 141 * scale);\n    ctx.bezierCurveTo(\n      x + 62 * scale,\n      y + 140 * scale,\n      x + 57 * scale,\n      y + 137 * scale,\n      x + 56 * scale,\n      y + 138 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 55 * scale,\n      y + 138 * scale,\n      x + 55 * scale,\n      y + 139 * scale,\n      x + 56 * scale,\n      y + 139 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 55 * scale,\n      y + 139 * scale,\n      x + 56 * scale,\n      y + 147 * scale,\n      x + 55 * scale,\n      y + 146 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 56 * scale,\n      y + 146 * scale,\n      x + 59 * scale,\n      y + 142 * scale,\n      x + 61 * scale,\n      y + 141 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 61 * scale,\n      y + 141 * scale,\n      x + 61 * scale,\n      y + 142 * scale,\n      x + 62 * scale,\n      y + 141 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.sharkToothLtGray;\n    ctx.fillStyle = \"rgba(163, 163, 163, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Upper Jaw Right Tooth #3, Gray\n    ctx.beginPath();\n    ctx.moveTo(x + 57 * scale, y + 138 * scale);\n    ctx.bezierCurveTo(\n      x + 57 * scale,\n      y + 137 * scale,\n      x + 51 * scale,\n      y + 134 * scale,\n      x + 50 * scale,\n      y + 134 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 48 * scale,\n      y + 135 * scale,\n      x + 49 * scale,\n      y + 135 * scale,\n      x + 49 * scale,\n      y + 136 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 50 * scale,\n      y + 136 * scale,\n      x + 50 * scale,\n      y + 144 * scale,\n      x + 50 * scale,\n      y + 144 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 50 * scale,\n      y + 144 * scale,\n      x + 54 * scale,\n      y + 139 * scale,\n      x + 56 * scale,\n      y + 139 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 56 * scale,\n      y + 139 * scale,\n      x + 58 * scale,\n      y + 140 * scale,\n      x + 57 * scale,\n      y + 138 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.sharkToothLtGray;\n    ctx.fillStyle = \"rgba(163, 163, 163, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Upper Jaw Right Tooth #2, Gray\n    ctx.beginPath();\n    ctx.moveTo(x + 51 * scale, y + 137 * scale);\n    ctx.bezierCurveTo(\n      x + 51 * scale,\n      y + 136 * scale,\n      x + 45 * scale,\n      y + 134 * scale,\n      x + 44 * scale,\n      y + 134 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 43 * scale,\n      y + 135 * scale,\n      x + 43 * scale,\n      y + 135 * scale,\n      x + 44 * scale,\n      y + 136 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 44 * scale,\n      y + 136 * scale,\n      x + 45 * scale,\n      y + 143 * scale,\n      x + 45 * scale,\n      y + 143 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 45 * scale,\n      y + 143 * scale,\n      x + 48 * scale,\n      y + 138 * scale,\n      x + 50 * scale,\n      y + 137 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 50 * scale,\n      y + 137 * scale,\n      x + 51 * scale,\n      y + 138 * scale,\n      x + 51 * scale,\n      y + 137 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.sharkToothLtGray;\n    ctx.fillStyle = \"rgba(163, 163, 163, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Upper Jaw Right Tooth #1, Gray\n    ctx.beginPath();\n    ctx.moveTo(x + 44 * scale, y + 133 * scale);\n    ctx.bezierCurveTo(\n      x + 43 * scale,\n      y + 132 * scale,\n      x + 37 * scale,\n      y + 130 * scale,\n      x + 36 * scale,\n      y + 130 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 35 * scale,\n      y + 131 * scale,\n      x + 35 * scale,\n      y + 131 * scale,\n      x + 36 * scale,\n      y + 132 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 37 * scale,\n      y + 132 * scale,\n      x + 37 * scale,\n      y + 140 * scale,\n      x + 37 * scale,\n      y + 140 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 37 * scale,\n      y + 140 * scale,\n      x + 40 * scale,\n      y + 134 * scale,\n      x + 42 * scale,\n      y + 134 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 43 * scale,\n      y + 133 * scale,\n      x + 44 * scale,\n      y + 134 * scale,\n      x + 44 * scale,\n      y + 133 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.sharkToothLtGray;\n    ctx.fillStyle = \"rgba(163, 163, 163, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Upper Jaw Left Tooth #1, White\n    ctx.beginPath();\n    ctx.moveTo(x + 40 * scale, y + 129 * scale);\n    ctx.bezierCurveTo(\n      x + 40 * scale,\n      y + 128 * scale,\n      x + 32 * scale,\n      y + 127 * scale,\n      x + 31 * scale,\n      y + 128 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 30 * scale,\n      y + 129 * scale,\n      x + 30 * scale,\n      y + 130 * scale,\n      x + 31 * scale,\n      y + 130 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 32 * scale,\n      y + 131 * scale,\n      x + 34 * scale,\n      y + 139 * scale,\n      x + 34 * scale,\n      y + 139 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 34 * scale,\n      y + 139 * scale,\n      x + 36 * scale,\n      y + 132 * scale,\n      x + 38 * scale,\n      y + 131 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 39 * scale,\n      y + 130 * scale,\n      x + 40 * scale,\n      y + 131 * scale,\n      x + 40 * scale,\n      y + 129 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 253, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Upper Jaw Left Tooth #2, White\n    ctx.beginPath();\n    ctx.moveTo(x + 50 * scale, y + 132 * scale);\n    ctx.bezierCurveTo(\n      x + 50 * scale,\n      y + 131 * scale,\n      x + 38 * scale,\n      y + 127 * scale,\n      x + 36 * scale,\n      y + 127 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 34 * scale,\n      y + 128 * scale,\n      x + 35 * scale,\n      y + 128 * scale,\n      x + 36 * scale,\n      y + 129 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 38 * scale,\n      y + 130 * scale,\n      x + 40 * scale,\n      y + 141 * scale,\n      x + 40 * scale,\n      y + 141 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 40 * scale,\n      y + 141 * scale,\n      x + 44 * scale,\n      y + 133 * scale,\n      x + 47 * scale,\n      y + 133 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 49 * scale,\n      y + 133 * scale,\n      x + 51 * scale,\n      y + 134 * scale,\n      x + 50 * scale,\n      y + 132 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 253, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Upper Jaw Left Tooth #3, White\n    ctx.beginPath();\n    ctx.moveTo(x + 58 * scale, y + 134 * scale);\n    ctx.bezierCurveTo(\n      x + 58 * scale,\n      y + 133 * scale,\n      x + 48 * scale,\n      y + 129 * scale,\n      x + 46 * scale,\n      y + 130 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 44 * scale,\n      y + 131 * scale,\n      x + 45 * scale,\n      y + 132 * scale,\n      x + 46 * scale,\n      y + 132 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 47 * scale,\n      y + 133 * scale,\n      x + 49 * scale,\n      y + 144 * scale,\n      x + 49 * scale,\n      y + 144 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 49 * scale,\n      y + 144 * scale,\n      x + 53 * scale,\n      y + 136 * scale,\n      x + 56 * scale,\n      y + 135 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 57 * scale,\n      y + 135 * scale,\n      x + 59 * scale,\n      y + 136 * scale,\n      x + 58 * scale,\n      y + 134 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 253, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Upper Jaw Left Tooth #4, White\n    ctx.beginPath();\n    ctx.moveTo(x + 68 * scale, y + 136 * scale);\n    ctx.bezierCurveTo(\n      x + 68 * scale,\n      y + 135 * scale,\n      x + 58 * scale,\n      y + 133 * scale,\n      x + 56 * scale,\n      y + 134 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 55 * scale,\n      y + 135 * scale,\n      x + 55 * scale,\n      y + 135 * scale,\n      x + 56 * scale,\n      y + 136 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 58 * scale,\n      y + 136 * scale,\n      x + 59 * scale,\n      y + 146 * scale,\n      x + 59 * scale,\n      y + 146 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 59 * scale,\n      y + 146 * scale,\n      x + 63 * scale,\n      y + 139 * scale,\n      x + 66 * scale,\n      y + 138 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 67 * scale,\n      y + 137 * scale,\n      x + 69 * scale,\n      y + 138 * scale,\n      x + 68 * scale,\n      y + 136 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 253, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Upper Jaw Left Tooth #5, White\n    ctx.beginPath();\n    ctx.moveTo(x + 77 * scale, y + 142 * scale);\n    ctx.bezierCurveTo(\n      x + 77 * scale,\n      y + 141 * scale,\n      x + 69 * scale,\n      y + 137 * scale,\n      x + 68 * scale,\n      y + 137 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 66 * scale,\n      y + 137 * scale,\n      x + 66 * scale,\n      y + 138 * scale,\n      x + 67 * scale,\n      y + 138 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 68 * scale,\n      y + 139 * scale,\n      x + 66 * scale,\n      y + 148 * scale,\n      x + 66 * scale,\n      y + 148 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 66 * scale,\n      y + 148 * scale,\n      x + 72 * scale,\n      y + 143 * scale,\n      x + 74 * scale,\n      y + 143 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 75 * scale,\n      y + 143 * scale,\n      x + 77 * scale,\n      y + 144 * scale,\n      x + 77 * scale,\n      y + 142 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 253, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Upper Jaw Left Tooth #6, White\n    ctx.beginPath();\n    ctx.moveTo(x + 88 * scale, y + 144 * scale);\n    ctx.bezierCurveTo(\n      x + 88 * scale,\n      y + 143 * scale,\n      x + 78 * scale,\n      y + 139 * scale,\n      x + 77 * scale,\n      y + 139 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 75 * scale,\n      y + 139 * scale,\n      x + 76 * scale,\n      y + 140 * scale,\n      x + 77 * scale,\n      y + 141 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 78 * scale,\n      y + 142 * scale,\n      x + 78 * scale,\n      y + 150 * scale,\n      x + 78 * scale,\n      y + 150 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 78 * scale,\n      y + 150 * scale,\n      x + 83 * scale,\n      y + 145 * scale,\n      x + 86 * scale,\n      y + 145 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 87 * scale,\n      y + 145 * scale,\n      x + 88 * scale,\n      y + 146 * scale,\n      x + 88 * scale,\n      y + 144 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 253, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Upper Jaw Left Tooth #7, White\n    ctx.beginPath();\n    ctx.moveTo(x + 94 * scale, y + 147 * scale);\n    ctx.bezierCurveTo(\n      x + 93 * scale,\n      y + 146 * scale,\n      x + 85 * scale,\n      y + 144 * scale,\n      x + 84 * scale,\n      y + 145 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 82 * scale,\n      y + 146 * scale,\n      x + 83 * scale,\n      y + 146 * scale,\n      x + 84 * scale,\n      y + 147 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 85 * scale,\n      y + 147 * scale,\n      x + 86 * scale,\n      y + 155 * scale,\n      x + 86 * scale,\n      y + 155 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 86 * scale,\n      y + 155 * scale,\n      x + 89 * scale,\n      y + 149 * scale,\n      x + 92 * scale,\n      y + 148 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 92 * scale,\n      y + 148 * scale,\n      x + 94 * scale,\n      y + 149 * scale,\n      x + 94 * scale,\n      y + 147 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.waylonWhite;\n    ctx.fillStyle = \"rgba(253, 253, 253, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 0.5;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Right Pectoral Fin\n    ctx.beginPath();\n    ctx.moveTo(x + 206 * scale, y + 210 * scale);\n    ctx.bezierCurveTo(\n      x + 195 * scale,\n      y + 212 * scale,\n      x + 176 * scale,\n      y + 229 * scale,\n      x + 206 * scale,\n      y + 227 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 154 * scale,\n      y + 236 * scale,\n      x + 165 * scale,\n      y + 322 * scale,\n      x + 172 * scale,\n      y + 340 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 179 * scale,\n      y + 358 * scale,\n      x + 188 * scale,\n      y + 370 * scale,\n      x + 194 * scale,\n      y + 370 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 206 * scale,\n      y + 370 * scale,\n      x + 205 * scale,\n      y + 343 * scale,\n      x + 213 * scale,\n      y + 326 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 247 * scale,\n      y + 255 * scale,\n      x + 298 * scale,\n      y + 244 * scale,\n      x + 300 * scale,\n      y + 224 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 281 * scale,\n      y + 218 * scale,\n      x + 275 * scale,\n      y + 216 * scale,\n      x + 262 * scale,\n      y + 216 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.sharkLtGray;\n    ctx.fillStyle = \"rgba(207, 209, 226, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 2;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Right Pectoral Fin Black Tip\n    ctx.beginPath();\n    ctx.moveTo(x + 172 * scale, y + 340 * scale);\n    ctx.bezierCurveTo(\n      x + 179 * scale,\n      y + 358 * scale,\n      x + 188 * scale,\n      y + 370 * scale,\n      x + 194 * scale,\n      y + 370 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 206 * scale,\n      y + 370 * scale,\n      x + 205 * scale,\n      y + 343 * scale,\n      x + 213 * scale,\n      y + 326 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 212 * scale,\n      y + 327 * scale,\n      x + 206 * scale,\n      y + 345 * scale,\n      x + 192 * scale,\n      y + 344 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 185 * scale,\n      y + 344 * scale,\n      x + 177 * scale,\n      y + 344 * scale,\n      x + 172 * scale,\n      y + 340 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.bgDkGray;\n    ctx.fillStyle = \"rgba(34, 34, 34, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 2;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Anal Fin\n    ctx.beginPath();\n    ctx.moveTo(x + 635 * scale, y + 209 * scale);\n    ctx.bezierCurveTo(\n      x + 640 * scale,\n      y + 214 * scale,\n      x + 658 * scale,\n      y + 223 * scale,\n      x + 653 * scale,\n      y + 216 * scale\n    );\n    ctx.quadraticCurveTo(\n      x + 648 * scale,\n      y + 210 * scale,\n      x + 652 * scale,\n      y + 205 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.sharkDkrGray;\n    ctx.fillStyle = \"rgba(120, 121, 140, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 2;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Light Gray Ventral Coloration\n    ctx.beginPath();\n    ctx.moveTo(x + 748 * scale, y + 207 * scale);\n    ctx.bezierCurveTo(\n      x + 785 * scale,\n      y + 238 * scale,\n      x + 837 * scale,\n      y + 327 * scale,\n      x + 862 * scale,\n      y + 300 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 827 * scale,\n      y + 264 * scale,\n      x + 824 * scale,\n      y + 215 * scale,\n      x + 818 * scale,\n      y + 165 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 829 * scale,\n      y + 108 * scale,\n      x + 854 * scale,\n      y + 57 * scale,\n      x + 862 * scale,\n      y + 18 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 833 * scale,\n      y + 48 * scale,\n      x + 822 * scale,\n      y + 69 * scale,\n      x + 802 * scale,\n      y + 92 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 772 * scale,\n      y + 127 * scale,\n      x + 744 * scale,\n      y + 157 * scale,\n      x + 730 * scale,\n      y + 168 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 709 * scale,\n      y + 177 * scale,\n      x + 649 * scale,\n      y + 159 * scale,\n      x + 649 * scale,\n      y + 159 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 649 * scale,\n      y + 159 * scale,\n      x + 648 * scale,\n      y + 147 * scale,\n      x + 645 * scale,\n      y + 142 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 642 * scale,\n      y + 137 * scale,\n      x + 623 * scale,\n      y + 152 * scale,\n      x + 616 * scale,\n      y + 150 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 522 * scale,\n      y + 128 * scale,\n      x + 470 * scale,\n      y + 121 * scale,\n      x + 442 * scale,\n      y + 109 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 407 * scale,\n      y + 94 * scale,\n      x + 411 * scale,\n      y + 50 * scale,\n      x + 408 * scale,\n      y + 1 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 359 * scale,\n      y + 15 * scale,\n      x + 345 * scale,\n      y + 76 * scale,\n      x + 318 * scale,\n      y + 85 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 249 * scale,\n      y + 82 * scale,\n      x + 213 * scale,\n      y + 89 * scale,\n      x + 171 * scale,\n      y + 88 * scale\n    ); // behind head\n    ctx.bezierCurveTo(\n      x + 92 * scale,\n      y + 86 * scale,\n      x + 37 * scale,\n      y + 63 * scale,\n      x + 16 * scale,\n      y + 65 * scale\n    ); // top of snout\n    ctx.bezierCurveTo(\n      x + 2 * scale,\n      y + 70 * scale,\n      x + 18 * scale,\n      y + 79 * scale,\n      x + 32 * scale,\n      y + 103 * scale\n    ); // bottom of snout\n    ctx.bezierCurveTo(\n      x + 39 * scale,\n      y + 116 * scale,\n      x + 25 * scale,\n      y + 130 * scale,\n      x + 32 * scale,\n      y + 130 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 61 * scale,\n      y + 132 * scale,\n      x + 69 * scale,\n      y + 135 * scale,\n      x + 84 * scale,\n      y + 146 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 100 * scale,\n      y + 157 * scale,\n      x + 125 * scale,\n      y + 204 * scale,\n      x + 122 * scale,\n      y + 204 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 104 * scale,\n      y + 199 * scale,\n      x + 79 * scale,\n      y + 250 * scale,\n      x + 56 * scale,\n      y + 257 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 72 * scale,\n      y + 277 * scale,\n      x + 102 * scale,\n      y + 236 * scale,\n      x + 139 * scale,\n      y + 247 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 205 * scale,\n      y + 266 * scale,\n      x + 293 * scale,\n      y + 271 * scale,\n      x + 359 * scale,\n      y + 262 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 506 * scale,\n      y + 243 * scale,\n      x + 608 * scale,\n      y + 210 * scale,\n      x + 727 * scale,\n      y + 197 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 733 * scale,\n      y + 196 * scale,\n      x + 748 * scale,\n      y + 207 * scale,\n      x + 748 * scale,\n      y + 207 * scale\n    );\n    // ctx.fillStyle = colors.waylonLtrGray;\n    ctx.fillStyle = \"rgba(234, 237, 244, 1.0)\";\n    ctx.fill();\n\n    // Shark - Gray Dorsal Coloration\n    ctx.beginPath();\n    ctx.moveTo(x + 748 * scale, y + 207 * scale); // middle of front edge of lower caudal lobe\n    ctx.bezierCurveTo(\n      x + 785 * scale,\n      y + 238 * scale,\n      x + 837 * scale,\n      y + 327 * scale,\n      x + 862 * scale,\n      y + 300 * scale\n    ); // bottom-rear point of lower caudal lobe\n    ctx.bezierCurveTo(\n      x + 827 * scale,\n      y + 264 * scale,\n      x + 824 * scale,\n      y + 215 * scale,\n      x + 818 * scale,\n      y + 165 * scale\n    ); // middle of rear edge of caudal fin\n    ctx.bezierCurveTo(\n      x + 829 * scale,\n      y + 108 * scale,\n      x + 854 * scale,\n      y + 57 * scale,\n      x + 862 * scale,\n      y + 18 * scale\n    ); // top of upper caudal lobe\n    ctx.bezierCurveTo(\n      x + 833 * scale,\n      y + 48 * scale,\n      x + 822 * scale,\n      y + 69 * scale,\n      x + 802 * scale,\n      y + 92 * scale\n    ); // middle of front edge of upper caudal lobe\n    ctx.bezierCurveTo(\n      x + 772 * scale,\n      y + 127 * scale,\n      x + 744 * scale,\n      y + 157 * scale,\n      x + 730 * scale,\n      y + 168 * scale\n    ); // in front of upper caudal lobe\n    ctx.bezierCurveTo(\n      x + 709 * scale,\n      y + 177 * scale,\n      x + 649 * scale,\n      y + 159 * scale,\n      x + 649 * scale,\n      y + 159 * scale\n    ); // behind second dorsal fin\n    ctx.bezierCurveTo(\n      x + 649 * scale,\n      y + 159 * scale,\n      x + 648 * scale,\n      y + 147 * scale,\n      x + 645 * scale,\n      y + 142 * scale\n    ); // top of second dorsal fin\n    ctx.bezierCurveTo(\n      x + 642 * scale,\n      y + 137 * scale,\n      x + 623 * scale,\n      y + 152 * scale,\n      x + 616 * scale,\n      y + 150 * scale\n    ); // in front of second dorsal fin\n    ctx.bezierCurveTo(\n      x + 522 * scale,\n      y + 128 * scale,\n      x + 470 * scale,\n      y + 121 * scale,\n      x + 442 * scale,\n      y + 109 * scale\n    ); // behind first dorsal fin\n    ctx.bezierCurveTo(\n      x + 407 * scale,\n      y + 94 * scale,\n      x + 411 * scale,\n      y + 50 * scale,\n      x + 408 * scale,\n      y + 1 * scale\n    ); // top of first dorsal fin\n    ctx.bezierCurveTo(\n      x + 359 * scale,\n      y + 15 * scale,\n      x + 345 * scale,\n      y + 76 * scale,\n      x + 318 * scale,\n      y + 85 * scale\n    ); // in front of first dorsal fin\n    ctx.bezierCurveTo(\n      x + 249 * scale,\n      y + 82 * scale,\n      x + 213 * scale,\n      y + 89 * scale,\n      x + 171 * scale,\n      y + 88 * scale\n    ); // behind head\n    ctx.bezierCurveTo(\n      x + 92 * scale,\n      y + 86 * scale,\n      x + 36 * scale,\n      y + 64 * scale,\n      x + 25 * scale,\n      y + 65 * scale\n    ); // top of snout\n    ctx.bezierCurveTo(\n      x - 17 * scale,\n      y + 69 * scale,\n      x + 43 * scale,\n      y + 94 * scale,\n      x + 68 * scale,\n      y + 107 * scale\n    ); // behind nostril\n    ctx.bezierCurveTo(\n      x + 94 * scale,\n      y + 121 * scale,\n      x + 96 * scale,\n      y + 149 * scale,\n      x + 126 * scale,\n      y + 166 * scale\n    ); // cheek\n    ctx.bezierCurveTo(\n      x + 163 * scale,\n      y + 175 * scale,\n      x + 200 * scale,\n      y + 178 * scale,\n      x + 266 * scale,\n      y + 180 * scale\n    ); // first gill slit\n    ctx.bezierCurveTo(\n      x + 273 * scale,\n      y + 180 * scale,\n      x + 293 * scale,\n      y + 194 * scale,\n      x + 291 * scale,\n      y + 198 * scale\n    ); // below fourth gill slit\n    ctx.bezierCurveTo(\n      x + 288 * scale,\n      y + 202 * scale,\n      x + 267 * scale,\n      y + 226 * scale,\n      x + 294 * scale,\n      y + 219 * scale\n    ); // front of pectoral joint\n    ctx.bezierCurveTo(\n      x + 345 * scale,\n      y + 205 * scale,\n      x + 451 * scale,\n      y + 205 * scale,\n      x + 503 * scale,\n      y + 210 * scale\n    ); // front of pelvic joint\n    ctx.bezierCurveTo(\n      x + 535 * scale,\n      y + 216 * scale,\n      x + 526 * scale,\n      y + 210 * scale,\n      x + 521 * scale,\n      y + 206 * scale\n    ); // rear of pelvic joint\n    ctx.bezierCurveTo(\n      x + 519 * scale,\n      y + 196 * scale,\n      x + 541 * scale,\n      y + 183 * scale,\n      x + 552 * scale,\n      y + 182 * scale\n    ); // above pelvic fin\n    ctx.bezierCurveTo(\n      x + 589 * scale,\n      y + 179 * scale,\n      x + 644 * scale,\n      y + 181 * scale,\n      x + 719 * scale,\n      y + 192 * scale\n    ); // pre-caudal flare\n    ctx.bezierCurveTo(\n      x + 754 * scale,\n      y + 180 * scale,\n      x + 747 * scale,\n      y + 185 * scale,\n      x + 762 * scale,\n      y + 182 * scale\n    ); // middle-front of caudal fin\n    ctx.bezierCurveTo(\n      x + 766 * scale,\n      y + 181 * scale,\n      x + 731 * scale,\n      y + 193 * scale,\n      x + 748 * scale,\n      y + 207 * scale\n    ); // middle of front edge of lower caudal lobe\n    ctx.closePath();\n    // ctx.fillStyle = colors.sharkDkrGray;\n    ctx.fillStyle = \"rgba(120, 121, 140, 1.0)\";\n    ctx.fill();\n\n    // Shark - Body Outline\n    ctx.lineWidth = 3;\n    ctx.beginPath();\n    ctx.moveTo(x + 748 * scale, y + 207 * scale);\n    ctx.bezierCurveTo(\n      x + 785 * scale,\n      y + 238 * scale,\n      x + 837 * scale,\n      y + 327 * scale,\n      x + 862 * scale,\n      y + 300 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 827 * scale,\n      y + 264 * scale,\n      x + 824 * scale,\n      y + 215 * scale,\n      x + 818 * scale,\n      y + 165 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 829 * scale,\n      y + 108 * scale,\n      x + 854 * scale,\n      y + 57 * scale,\n      x + 862 * scale,\n      y + 18 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 833 * scale,\n      y + 48 * scale,\n      x + 822 * scale,\n      y + 69 * scale,\n      x + 802 * scale,\n      y + 92 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 772 * scale,\n      y + 127 * scale,\n      x + 744 * scale,\n      y + 157 * scale,\n      x + 730 * scale,\n      y + 168 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 709 * scale,\n      y + 177 * scale,\n      x + 649 * scale,\n      y + 159 * scale,\n      x + 649 * scale,\n      y + 159 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 649 * scale,\n      y + 159 * scale,\n      x + 648 * scale,\n      y + 147 * scale,\n      x + 645 * scale,\n      y + 142 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 642 * scale,\n      y + 137 * scale,\n      x + 623 * scale,\n      y + 152 * scale,\n      x + 616 * scale,\n      y + 150 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 522 * scale,\n      y + 128 * scale,\n      x + 470 * scale,\n      y + 121 * scale,\n      x + 442 * scale,\n      y + 109 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 407 * scale,\n      y + 94 * scale,\n      x + 411 * scale,\n      y + 50 * scale,\n      x + 408 * scale,\n      y + 1 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 359 * scale,\n      y + 15 * scale,\n      x + 345 * scale,\n      y + 76 * scale,\n      x + 318 * scale,\n      y + 85 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 249 * scale,\n      y + 82 * scale,\n      x + 213 * scale,\n      y + 89 * scale,\n      x + 171 * scale,\n      y + 88 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 92 * scale,\n      y + 86 * scale,\n      x + 37 * scale,\n      y + 63 * scale,\n      x + 16 * scale,\n      y + 65 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 2 * scale,\n      y + 70 * scale,\n      x + 18 * scale,\n      y + 79 * scale,\n      x + 32 * scale,\n      y + 103 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 39 * scale,\n      y + 116 * scale,\n      x + 25 * scale,\n      y + 130 * scale,\n      x + 32 * scale,\n      y + 130 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 61 * scale,\n      y + 132 * scale,\n      x + 69 * scale,\n      y + 135 * scale,\n      x + 84 * scale,\n      y + 146 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 100 * scale,\n      y + 157 * scale,\n      x + 125 * scale,\n      y + 204 * scale,\n      x + 122 * scale,\n      y + 204 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 104 * scale,\n      y + 199 * scale,\n      x + 79 * scale,\n      y + 250 * scale,\n      x + 56 * scale,\n      y + 257 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 72 * scale,\n      y + 277 * scale,\n      x + 102 * scale,\n      y + 236 * scale,\n      x + 139 * scale,\n      y + 247 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 205 * scale,\n      y + 266 * scale,\n      x + 293 * scale,\n      y + 271 * scale,\n      x + 359 * scale,\n      y + 262 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 506 * scale,\n      y + 243 * scale,\n      x + 608 * scale,\n      y + 210 * scale,\n      x + 727 * scale,\n      y + 197 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 733 * scale,\n      y + 196 * scale,\n      x + 748 * scale,\n      y + 207 * scale,\n      x + 748 * scale,\n      y + 207 * scale\n    );\n    ctx.lineWidth = 2;\n    ctx.moveTo(x + 318 * scale, y + 85 * scale);\n    ctx.bezierCurveTo(\n      x + 318 * scale,\n      y + 85 * scale,\n      x + 415 * scale,\n      y + 99 * scale,\n      x + 442 * scale,\n      y + 109 * scale\n    );\n    ctx.moveTo(x + 616 * scale, y + 150 * scale);\n    ctx.lineTo(x + 649 * scale, y + 159 * scale);\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Left Pectoral Fin\n    ctx.beginPath();\n    ctx.moveTo(x + 338 * scale, y + 207 * scale);\n    ctx.bezierCurveTo(\n      x + 352 * scale,\n      y + 207 * scale,\n      x + 357 * scale,\n      y + 209 * scale,\n      x + 376 * scale,\n      y + 215 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 419 * scale,\n      y + 238 * scale,\n      x + 447 * scale,\n      y + 262 * scale,\n      x + 507 * scale,\n      y + 278 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 432 * scale,\n      y + 290 * scale,\n      x + 367 * scale,\n      y + 257 * scale,\n      x + 294 * scale,\n      y + 219 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 267 * scale,\n      y + 225 * scale,\n      x + 288 * scale,\n      y + 203 * scale,\n      x + 291 * scale,\n      y + 198 * scale\n    );\n    // ctx.fillStyle = colors.sharkDkrGray;\n    ctx.fillStyle = \"rgba(120, 121, 140, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 2;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Left Pelvic Fin\n    ctx.beginPath();\n    ctx.moveTo(x + 557 * scale, y + 212 * scale);\n    ctx.bezierCurveTo(\n      x + 566 * scale,\n      y + 210 * scale,\n      x + 563 * scale,\n      y + 209 * scale,\n      x + 564 * scale,\n      y + 211 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 565 * scale,\n      y + 227 * scale,\n      x + 566 * scale,\n      y + 225 * scale,\n      x + 573 * scale,\n      y + 236 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 551 * scale,\n      y + 242 * scale,\n      x + 527 * scale,\n      y + 232 * scale,\n      x + 515 * scale,\n      y + 222 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 512 * scale,\n      y + 220 * scale,\n      x + 519 * scale,\n      y + 212 * scale,\n      x + 503 * scale,\n      y + 210 * scale\n    );\n    // ctx.fillStyle = colors.sharkDkrGray;\n    ctx.fillStyle = \"rgba(120, 121, 140, 1.0)\";\n    ctx.fill();\n    ctx.lineWidth = 2;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n    ctx.fill();\n    ctx.stroke();\n\n    // Shark - Gill Slits\n    ctx.lineWidth = 2;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.beginPath();\n    ctx.moveTo(x + 262.28 * scale, y + 182.98 * scale);\n    ctx.bezierCurveTo(\n      x + 265 * scale,\n      y + 166 * scale,\n      x + 269 * scale,\n      y + 140 * scale,\n      x + 246 * scale,\n      y + 115 * scale\n    ); // 1\n    ctx.moveTo(x + 274 * scale, y + 192 * scale);\n    ctx.bezierCurveTo(\n      x + 279 * scale,\n      y + 173 * scale,\n      x + 281 * scale,\n      y + 142 * scale,\n      x + 259 * scale,\n      y + 115 * scale\n    ); // 2\n    ctx.moveTo(x + 283 * scale, y + 192 * scale);\n    ctx.bezierCurveTo(\n      x + 290 * scale,\n      y + 174 * scale,\n      x + 289 * scale,\n      y + 135 * scale,\n      x + 277 * scale,\n      y + 116 * scale\n    ); // 3\n    ctx.moveTo(x + 289 * scale, y + 120 * scale);\n    ctx.bezierCurveTo(\n      x + 297 * scale,\n      y + 127 * scale,\n      x + 298 * scale,\n      y + 182 * scale,\n      x + 292 * scale,\n      y + 189 * scale\n    ); // 4\n    ctx.moveTo(x + 301 * scale, y + 127 * scale);\n    ctx.bezierCurveTo(\n      x + 307 * scale,\n      y + 131 * scale,\n      x + 308 * scale,\n      y + 176 * scale,\n      x + 301 * scale,\n      y + 187 * scale\n    ); // 5\n    ctx.lineWidth = 2;\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Eye Iris\n    ctx.beginPath();\n    ctx.arc(x + 107 * scale, y + 115 * scale, 8 * scale, 0, 2 * Math.PI, false);\n    ctx.closePath();\n    // ctx.fillStyle = colors.waylonBlack;\n    ctx.fillStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.fill();\n    // ctx.strokeStyle = colors.sharkToothDkGray;\n    ctx.strokeStyle = \"rgba(89, 89, 89, 1.0)\";\n    ctx.stroke();\n\n    // Shark - Eye Reflection\n    // ctx.strokeStyle = colors.eyeShine;\n    ctx.strokeStyle = \"rgba(255, 255, 255, 0.7)\";\n    ctx.beginPath();\n    ctx.moveTo(x + 109 * scale, y + 113 * scale);\n    ctx.lineTo(x + 107 * scale, y + 112 * scale);\n    ctx.closePath();\n    ctx.stroke();\n\n    // Shark - Nostril\n    ctx.beginPath();\n    ctx.moveTo(x + 47 * scale, y + 104 * scale);\n    ctx.bezierCurveTo(\n      x + 51 * scale,\n      y + 107 * scale,\n      x + 56 * scale,\n      y + 99 * scale,\n      x + 54 * scale,\n      y + 99 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 52 * scale,\n      y + 98 * scale,\n      x + 50 * scale,\n      y + 102 * scale,\n      x + 50 * scale,\n      y + 102 * scale\n    );\n    ctx.bezierCurveTo(\n      x + 50 * scale,\n      y + 102 * scale,\n      x + 45 * scale,\n      y + 102 * scale,\n      x + 47 * scale,\n      y + 104 * scale\n    );\n    ctx.closePath();\n    // ctx.fillStyle = colors.bgDkGray;\n    ctx.fillStyle = \"rgba(34, 34, 34, 1.0)\";\n    ctx.fill();\n    // ctx.strokeStyle = colors.waylonBlack;\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1.0)\";\n    ctx.stroke();\n  };\n};\n\nexport default WhiteShark;","// import * as myColors from \"../styles/_colors.scss\";\n// import { myColors } from \"../styles/_colors.scss\";\n// import myColors from \"../styles/_colors.scss\";\nimport Enemy from \"./enemy\";\nimport Orca from \"./orca\";\nimport TharSheBlows from \"./thar_she_blows\";\nimport Waves from \"./waves\";\nimport Waylon from \"./waylon\";\nimport WhiteShark from \"./whiteshark\";\n\nconst ENEMY_TYPES = [\n  \"WhiteShark\",\n  \"Orca\"\n  // Hope to add many more in future updates\n]\n\nclass Game {\n  constructor(){\n    this.dimensions = [1200, 900]\n    this.enemies = [];\n    this.waylon = [];\n    this.tharSheBlows = [];\n    this.waves = [];\n    this.bubbles = [];\n    this.difficulty = 1;\n    this.paused = false;\n    this.tick\n  }\n\n\n  draw = (ctx) => {\n\n    const skyGradient = ctx.createLinearGradient(0, 0, 0, 100);\n    skyGradient.addColorStop(0, \"rgba(134, 153, 246, 1.0)\");\n    skyGradient.addColorStop(1, \"rgba(151, 202, 243, 1.0)\");\n    // skyGradient.addColorStop(0, myColors.skyTop);\n    // skyGradient.addColorStop(1, myColors.skyHorizon);\n    \n    const oceanGradient = ctx.createLinearGradient(0, 100, 0, this.dimensions[1]);\n    oceanGradient.addColorStop(0, \"rgba(87, 247, 250, 1.0)\");\n    oceanGradient.addColorStop(1, \"rgba(0, 0, 80, 1.0)\");\n    // oceanGradient.addColorStop(0, myColors.oceanHorizon);\n    // oceanGradient.addColorStop(1, myColors.deepBlue);\n    ctx.clearRect(0, 0, this.dimensions[0], this.dimensions[1]);\n    \n    ctx.fillStyle = skyGradient;\n    ctx.fillRect(0, 0, this.dimensions[0], 100);\n    ctx.fillStyle = oceanGradient;\n    ctx.fillRect(0, 100, this.dimensions[0], this.dimensions[1]);\n\n    this.allObjects().forEach((object) => {\n      debugger\n      object.draw(ctx);\n    });\n  };\n\n  add = (object) => {\n    if (object instanceof Waylon) {\n      this.waylon.push(object);\n    } else if (object instanceof Enemy) {\n      this.enemies.push(object);\n    } else if (object instanceof Waves) {\n      this.waves.push(object);\n    } else if (object instanceof TharSheBlows) {\n      this.tharSheBlows.push(object);\n    // } else if (object instanceof Bubble) {\n    //   this.bubbles.push(object);\n    } else {\n      throw new Error(\"wat\");\n    }\n  };\n\n  remove = (object) => {\n    if (object instanceof Enemy) {\n      this.enemies.splice(this.enemies.indexOf(object), 1);\n    // } else if (object instanceof Bubble) {\n      // this.bubbles.splice(this.bubbles.indexOf(object), 1);\n    }\n  };\n\n  spawnTimer = () => {\n    // let i = 0;\n    this.tick = setInterval(() => {\n      if (!this.paused) {this.chooseRandomEnemy()}\n    }, 5000);\n  };\n\n  chooseRandomEnemy = () => {\n    const chosenEnemyIdx = Math.floor(Math.random() * ENEMY_TYPES.length);\n    return this.spawnEnemy(ENEMY_TYPES[chosenEnemyIdx])\n  };\n  \n  spawnEnemy = (enemyType) => {\n    const options = {\n      game: this,\n      sizeScale: this.randomScale(),\n      position: [this.dimensions[0] + 1, 0],\n      velocity: this.randomVelocity()\n    };\n\n    let enemy;\n    switch (enemyType) {\n      case \"Orca\":\n        enemy = new Orca(options);\n        enemy.position[1] = this.randomDepth(enemy.vSize);\n        return this.add(enemy);\n      default:\n        enemy = new WhiteShark(options);\n        enemy.position[1] = this.randomDepth(enemy.vSize);\n        return this.add(enemy);\n      }\n  };\n\n  randomDepth = (objectHeight) => {\n    return Math.floor(Math.random() * (900 - objectHeight));\n  };\n\n  randomScale = () => {\n    // rounded to hundredths\n    return (Math.round(100 * (Math.random() * 0.3 + 0.5)) / 100);\n  };\n\n  randomVelocity = () => {\n    return (Math.floor(Math.random() * 5) + 3);\n  };\n\n\n  allObjects = () => {\n    return [].concat(this.waves, this.tharSheBlows, this.waylon, this.enemies); //this.bubbles\n  };\n\n  moveObjects = (velocityScale) => {\n    this.allObjects().forEach((object) => {\n      debugger\n      object.move(velocityScale);\n    });\n  };\n\n  step = (delta) => {\n    const NORMAL_FRAME_TIME_DELTA = 1000 / 60;\n    const velocityScale = delta / NORMAL_FRAME_TIME_DELTA;\n    return this.moveObjects(velocityScale);\n  };\n}\n\nexport default Game;","class FreqAnalyzer {\n  constructor() {\n  this.audioCtxt;\n  this.analyzer;\n  this.audioArray;\n  this.source;\n  this.display = document.getElementById(\"freq-display\");\n};\n\n  getMediaDevices = () => {\n    if (navigator.mediaDevices === undefined) {\n      navigator.mediaDevices = {};\n    }\n\n    if (navigator.mediaDevices.getUserMedia === undefined) {\n      navigator.mediaDevices.getUserMedia = (constraints) => {\n        const getUserMedia =\n          navigator.webkitGetUserMedia ||\n          navigator.mozGetUserMedia ||\n          navigator.msGetUserMedia;\n        if (!getUserMedia) {\n          return Promise.reject(\n          new Error(\"This browser cannot support this game.\")\n          );\n        }\n        return new Promise((resolve, reject) => {\n          getUserMedia.call(navigator, constraints, resolve, reject);\n        });\n      };\n    }\n  };\n\n  createAudioContext = () => {\n    // Apparently Safari crashes without << window. >>\n    return this.audioCtxt = new (window.AudioContext || window.webkitAudioContext)();\n  };\n\n  createAnalyzerNode = () => {\n    this.analyzer = this.audioCtxt.createAnalyser();\n    this.analyzer.fftSize = 2048;\n    this.analyzer.minDecibels = -50;\n    this.analyzer.smoothingTimeConstant = 0.5;\n    // create buffer array of length 1/2 fftSize\n    return this.audioArray = new Uint8Array(this.analyzer.frequencyBinCount);\n  };\n\n  getMicStream = () => {\n    if (navigator.mediaDevices.getUserMedia) {\n      const constraints = { audio: true, video: false };\n      navigator.mediaDevices\n        .getUserMedia(constraints)\n        .then((stream) => {\n          this.source = this.audioCtxt.createMediaStreamSource(stream);\n          return this.source.connect(this.analyzer);\n          // to enable speaker output (not currently desired), \n          // connect a destination node; \n          // analyzer.connect(audioCtxt.destination);\n        })\n        .catch(err => console.log(\"Encountered getUserMedia error: \" + err));\n    } else {\n      return console.log(\"This browser doesn't support getUserMedia!\");\n    }\n  };\n\n  // to get index with greatest value\n  indexOfGreatestFrequency = (arr) => {\n    if (arr.length === 0) return null;\n    let maxVal = arr[0];\n    let maxIdx = 0;\n    for (let i = 1; i < arr.length; i++) {\n      if (arr[i] > maxVal) {\n        maxIdx = i;\n        maxVal = arr[i];\n      }\n    }\n    return maxIdx;\n  };\n\n  outputTopFreq = () => {\n    \n    if (this.audioCtxt && this.audioCtxt.state !== \"closed\") {\n      // start analyzing data from audioArray\n      this.analyzer.getByteFrequencyData(this.audioArray);\n      \n      // if not displaying numeric output:\n      return this.indexOfGreatestFrequency(this.audioArray);\n      \n    //   // to display numeric output in top left corner for testing\n    //   let nextPitch = this.indexOfGreatestFrequency(this.audioArray);\n    //   this.display.textContent = nextPitch;\n    //   return nextPitch;\n    // } else {\n    //   this.display.textContent = \"No audioCtxt\";\n    //   return null;\n    }\n  };\n\n  resetFreqAnalyzer = () => {\n    if (this.source.mediaStream.active) {\n      let tracks = this.source.mediaStream.getTracks();\n      tracks.forEach((track) => {\n        track.stop();\n        this.source.mediaStream.removeTrack(track);\n      });\n    };\n    this.analyzer = null;\n    this.audio = null;\n    if (this.audioCtxt.state !== \"closed\") {\n      this.audioCtxt.close().then(console.log(\"Audio Context Closed\"));\n    }\n  };\n};\n\nexport default FreqAnalyzer;","class Modal {\n  constructor(){\n    this.modal = document.getElementById(\"modal\");\n  };\n\n  show = () => {\n    this.modal.style.display = \"flex\";\n  }\n\n  close = () => {\n    this.modal.style.display = \"none\";\n  }\n\n  intro = () => {\n    this.modal.innerHTML = `\n      <div class=\"modal-content\">\n        <p class=\"story\">As they began their 5,000 mile seasonal migration from tropical calving waters to their polar feeding zone...</p>\n        <p class=\"story boom emphasis\">Boom!</p>\n        <p class=\"story\">...<span class=\"emphasis\">PetroChem, Inc.'s seismic blasting</span> stunned and disoriented a pod of humpback whales.\n          By the time their ears had recovered poor baby <span class=\"emphasis\">WAYLON</span>'s Momma was nowhere to be seen.</p><br />\n        <p class=\"story\"><span class=\"emphasis\">Speak Whale to guide baby WAYLON along the dangerous journey to the safety of Momma's shadow.</span></p><br />\n        <p class=\"instructions-heading emphasis\">Instructions:</p>\n        <ul class=\"instructions-list\">\n          <li class=\"instructions-text\">If asked, please <span class=\"emphasis\">allow the game to access your microphone</span> during play.</li>\n          <li class=\"instructions-text\"><span class=\"emphasis\">Use your voice</span> to control WAYLON's movement.</li>\n          <li class=\"instructions-text\">If you've seen the movie about the missing clownfish, you may already have some idea how to <span class=\"emphasis\">speak Whale</span>. If not, here are the basics:</li>\n          <li class=\"instructions-text\"><span class=\"emphasis\">Rising pitches</span> (low to high on a musical scale) tell WAYLON to <span class=\"emphasis\">swim upwards.</span></li>\n          <li class=\"instructions-text\"><span class=\"emphasis\">Descending pitches</span> (high to low on a musical scale) tell WAYLON to <span class=\"emphasis\">dive downwards.</span></li>\n          <li class=\"instructions-text\"><span class=\"emphasis\">NOTE: WAYLON</span> responds to <span class=\"emphasis\">pitch, not volume</span>. Yelling at baby whales is unkind and counterproductive.</li>\n        </ul>\n        <p></p>\n        <button id=\"start-button\" class=\"modal-button\">Click to Start</button>\n      </div>`;\n      this.show();\n  };\n\n  gameOver = (predator) => {\n    this.modal.innerHTML = `<div class=\"modal-content\">\n        <p class=\"story boom emphasis\">Oh No!</p>\n        <p class=\"story\">You need to help Waylon avoid</p>\n        <p class=\"story\">hungry <span class=\"emphasis\">${predator.name}s.</span></p>\n        <button id=\"reset-button\" class=\"modal-button\">Try Again</button>\n      </div>`;\n    this.show()\n  };\n\n  pause = () => {\n    this.modal.innerHTML = \n      `<div class=\"modal-content\">\n        <button id=\"resume-button\" class=\"modal-button\">Resume</button>\n      </div>`;\n    this.show();\n  };\n\n  gameStop = () => {\n    this.modal.innerHTML = `<div class=\"modal-content\">\n        <p class=\"story\"><span class=\"emphasis\">Thank you for playing</span></p>\n        <p class=\"story\"><a class=\"modal-logo\"><img\n            id=\"game-reset-button\" \n            src=\"./src/images/waylon-title-highlight.svg\" \n            alt=\"Waylon game logo\"\n          /></a></p>\n        <p class=\"story\">Check out the developer's</p>\n        <p class=\"story boom emphasis\"><a class=\"modal-link\" href=\"https://matthewgreer.github.io/\">portfolio</a></p>\n        <p class=\"story\">or the</p>\n        <p class=\"story boom emphasis\"><a class=\"modal-link\" href=\"https://github.com/matthewgreer/waylon\">WAYLON GitHub</a></p>\n        <p class=\"story\">for more info.</p>\n        <p class=\"story\">If you'd like to keep playing, <span class=\"emphasis\">click the WAYLON logo</span>.</p>\n      </div>`;\n    this.show();\n  };\n\n};\n\nexport default Modal;","import FreqAnalyzer from \"./freq_analyzer\";\nimport Modal from \"./modal\";\nimport Waves from \"./waves\";\nimport Waylon from \"./waylon\";\n\nclass GameView {\n  constructor(game, ctx) {\n    this.ctx = ctx;\n    this.game = game;\n    this.endOfGame = false;\n    this.modal = new Modal();\n    this.modal.intro();\n    this.modal.show();\n    this.freqAnalyzer = new FreqAnalyzer();\n    this.startButton = document.getElementById(\"start-button\");\n    this.pauseButton = document.getElementById(\"pause-button\");\n    this.stopButton = document.getElementById(\"stop-button\");\n    this.animReq;\n    this.killer;\n  }\n\n  initialize = () => {\n    this.clear();\n    this.startButton.addEventListener(\"click\", this.start);\n  }\n\n  start = () => {\n    this.startButton.removeEventListener(\"click\", this.start);\n    this.modal.close();\n    this.freqAnalyzer.getMediaDevices();\n    this.freqAnalyzer.createAudioContext();\n    this.freqAnalyzer.createAnalyzerNode();\n    this.freqAnalyzer.getMicStream();\n    this.game.add(new Waves(0.5, [0, 0]));\n    this.game.add(\n      new Waylon({\n        game: this.game,\n        freqAnalyzer: this.freqAnalyzer,\n        position: [25, 0],\n        sizeScale: 0.6,\n        velocity: 18,\n      })\n    );\n    this.game.spawnTimer();\n    this.pauseButton.addEventListener(\"click\", this.pause);\n    this.stopButton.addEventListener(\"click\", this.stop);\n    this.lastTime = 0;\n    return (this.animReq = requestAnimationFrame(this.animate.bind(this)));\n  };\n\n  animate = (time) => {\n    if (!this.paused) {\n      const timeDelta = time - this.lastTime;\n      this.game.step(timeDelta);\n      this.checkPredation();\n      if (this.endOfGame) {\n        return this.endGame(this.killer);\n      } else {\n        this.game.draw(this.ctx);\n        this.lastTime = time;\n        return (this.animReq = requestAnimationFrame(this.animate.bind(this)));\n      }\n    }\n  };\n\n  checkPredation = () => {\n    for (let i = 0; i < this.game.enemies.length; i++) {\n      const predator = this.game.enemies[i];\n      debugger\n      if (predator.isEating(this.game.waylon)) {\n        this.killer = predator;\n        return this.endOfGame = true;\n      }\n    }\n  };\n\n  endGame = (predator) => {\n    this.clear();\n    this.modal.gameOver(predator);\n    this.freqAnalyzer.audioCtxt\n      .close()\n      .then(\n        document\n          .getElementById(\"reset-button\")\n          .addEventListener(\"click\", this.reset)\n      );\n  };\n\n  reset = () => {\n    this.game.difficulty = 0;\n    this.modal.intro();\n    document\n      .getElementById(\"start-button\")\n      .addEventListener(\"click\", this.start);\n  };\n\n  stop = () => {\n    this.clear();\n    this.freqAnalyzer.resetFreqAnalyzer();\n    this.modal.gameStop();\n    return document\n      .getElementById(\"game-reset-button\")\n      .addEventListener(\"click\", this.reset);\n  };\n\n  clear = () => {\n    cancelAnimationFrame(this.animReq);\n    clearInterval(this.game.tick);\n    this.game.waylon = [];\n    this.game.enemies = [];\n    this.game.tharSheBlows = [];\n    this.game.waves = [];\n    this.endOfGame = false;\n    this.game.draw(this.ctx);\n  };\n\n  pause = () => {\n    cancelAnimationFrame(this.animReq);\n    this.game.paused = true;\n    this.freqAnalyzer.audioCtxt.suspend().then(this.modal.pause());\n    this.resumeButton = document.getElementById(\"resume-button\");\n    return this.resumeButton.addEventListener(\"click\", this.resume);\n  };\n\n  resume = () => {\n    this.resumeButton.removeEventListener(\"click\", this.resume);\n    this.lastTime = 0;\n    this.game.paused = false;\n    this.freqAnalyzer.audioCtxt.resume().then(this.modal.close());\n    return this.animate(0);\n  };\n\n};\nexport default GameView;","import './styles/index.scss';\nimport Game from \"./scripts/game\";\nimport GameView from \"./scripts/game_view\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById(\"canvas\");\n  const game = new Game();\n  canvas.width = game.dimensions[0];\n  canvas.height = game.dimensions[1];\n  const ctx = canvas.getContext('2d');\n  new GameView(game, ctx).initialize();\n});"],"sourceRoot":""}